{"version":3,"file":"static/js/440.532b359a.chunk.js","mappings":"8NACA,GAAgB,UAAY,iCAAiC,IAAM,2BAA2B,MAAQ,6BAA6B,YAAc,mCAAmC,KAAO,4BAA4B,UAAY,iCAAiC,MAAQ,8B,SCS5Q,SAASA,IACL,IAAMC,GAAWC,EAAAA,EAAAA,MACVC,GAASC,EAAAA,EAAAA,YAAWC,EAAAA,GAApBF,MAODG,EAA6B,CAC/BC,KAAMC,EAAOC,MACbA,MAAO,aAGLC,GAASC,EAAAA,EAAAA,MAGTC,GAAaC,EAAAA,EAAAA,IAAgB,+CAADC,OACiBJ,EAAOK,IACtD,iBAOJ,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,IAAGV,EAAOW,UAAW,CAAC,eAA0B,UAAVhB,IAAoBiB,SAAA,CACrER,GACGI,EAAAA,EAAAA,MAAAK,EAAAA,SAAA,CAAAD,SAAA,EACIE,EAAAA,EAAAA,KAAA,MAAIL,UAAWT,EAAOe,MAAMH,SAAER,EAAMW,SACpCP,EAAAA,EAAAA,MAAA,OAAKC,UAAWT,EAAOgB,YAAYJ,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,OAAKG,IAAKb,EAAMc,MAAOC,IAAI,MAC3BX,EAAAA,EAAAA,MAAA,OAAKC,UAAWT,EAAOoB,KAAKR,SAAA,EACxBJ,EAAAA,EAAAA,MAAA,KAAGC,UAAWT,EAAOqB,UAAUT,SAAA,CAAC,uBAE5BE,EAAAA,EAAAA,KAAA,QACIL,UAAWX,EAAWH,GAAOiB,SAAA,IAAAN,OAC3BF,EAAMkB,yBAEhBd,EAAAA,EAAAA,MAAA,KAAGC,UAAWT,EAAOqB,UAAUT,SAAA,CAAC,SAE5BE,EAAAA,EAAAA,KAAA,QAAML,UAAWX,EAAWH,GAAOiB,SAAA,IAAAN,OAAMF,EAAMmB,YAEnDf,EAAAA,EAAAA,MAAA,KAAGC,UAAWT,EAAOqB,UAAUT,SAAA,CAAC,aAE5BE,EAAAA,EAAAA,KAAA,QAAML,UAAWX,EAAWH,GAAOiB,SAAA,IAAAN,OAAMF,EAAMoB,gBAEnDhB,EAAAA,EAAAA,MAAA,KAAGC,UAAWT,EAAOqB,UAAUT,SAAA,CAAC,WAE5BE,EAAAA,EAAAA,KAAA,QAAML,UAAWX,EAAWH,GAAOiB,SAAA,IAAAN,OAAMF,EAAMqB,cAEnDjB,EAAAA,EAAAA,MAAA,KAAGC,UAAWT,EAAOqB,UAAUT,SAAA,CAAC,WAE5BE,EAAAA,EAAAA,KAAA,QAAML,UAAWX,EAAWH,GAAOiB,SAAA,IAAAN,OAAMF,EAAMsB,cAEnDlB,EAAAA,EAAAA,MAAA,KAAGC,UAAWT,EAAOqB,UAAUT,SAAA,CAAC,YAE5BE,EAAAA,EAAAA,KAAA,QAAML,UAAWX,EAAWH,GAAOiB,SAAA,IAAAN,OAAMF,EAAMuB,qBAI3DnB,EAAAA,EAAAA,MAAA,OAAKC,UAAWT,EAAO4B,SAAShB,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,OAAAF,SAAK,eACLE,EAAAA,EAAAA,KAAA,OAAAF,UACIE,EAAAA,EAAAA,KAAA,QAAML,UAAWX,EAAWH,GAAOiB,SAAA,IAAAN,OAAMF,EAAMwB,qBAK3Dd,EAAAA,EAAAA,KAAA,OAAAF,SAAK,gBAGTE,EAAAA,EAAAA,KAAA,UAAQS,KAAK,SAASd,UAAS,GAAAH,OAAKN,EAAO6B,IAAG,oBAAoBC,QAnDtD,WAChBrC,EAAS,cACb,EAiD+FmB,SAAC,qCAKpG,C","sources":["webpack://anime-list/./src/pages/Detailed-item/Detailed-item.module.css?2258","pages/Detailed-item/Detailed-item.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Detailed-item_container__7j2xg\",\"btn\":\"Detailed-item_btn__FncvB\",\"title\":\"Detailed-item_title__HVqYs\",\"description\":\"Detailed-item_description__f71G-\",\"info\":\"Detailed-item_info__wo7al\",\"info_item\":\"Detailed-item_info_item__3l+sY\",\"light\":\"Detailed-item_light__0091d\"};","import {useNavigate, useParams} from 'react-router-dom';\nimport {useContext} from 'react';\n\nimport cn from 'classnames';\n\nimport {ThemeContext} from '../../services/theme/ThemeProvider';\nimport {useDataFetching} from '../../hooks';\n\nimport styles from './Detailed-item.module.css';\n\nfunction DetailedItem() {\n    const navigate = useNavigate();\n    const {theme} = useContext(ThemeContext);\n\n    type ThemeClassType = {\n        dark: string;\n        light: string;\n        [key: string]: string;\n    };\n    const ThemeClass: ThemeClassType = {\n        dark: styles.light,\n        light: 'text-dark',\n    };\n\n    const params = useParams();\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const anime: any = useDataFetching(\n        `https://anime-db.p.rapidapi.com/anime/by-id/${params.id}`,\n        'datailed-page'\n    );\n\n    const handleClick = () => {\n        navigate('/anime-list');\n    };\n\n    return (\n        <div className={cn(styles.container, {'text-primary': theme === 'light'})}>\n            {anime ? (\n                <>\n                    <h2 className={styles.title}>{anime.title}</h2>\n                    <div className={styles.description}>\n                        <img src={anime.image} alt=\"\" />\n                        <div className={styles.info}>\n                            <p className={styles.info_item}>\n                                Alternative Titles:\n                                <span\n                                    className={ThemeClass[theme]}\n                                >{` ${anime.alternativeTitles}`}</span>\n                            </p>\n                            <p className={styles.info_item}>\n                                Type:\n                                <span className={ThemeClass[theme]}>{` ${anime.type}`}</span>\n                            </p>\n                            <p className={styles.info_item}>\n                                Episodes:\n                                <span className={ThemeClass[theme]}>{` ${anime.episodes}`}</span>\n                            </p>\n                            <p className={styles.info_item}>\n                                Status:\n                                <span className={ThemeClass[theme]}>{` ${anime.status}`}</span>\n                            </p>\n                            <p className={styles.info_item}>\n                                Genres:\n                                <span className={ThemeClass[theme]}>{` ${anime.genres}`}</span>\n                            </p>\n                            <p className={styles.info_item}>\n                                Ranking:\n                                <span className={ThemeClass[theme]}>{` ${anime.ranking}`}</span>\n                            </p>\n                        </div>\n                    </div>\n                    <div className={styles.synopsis}>\n                        <div>Synopsis </div>\n                        <div>\n                            <span className={ThemeClass[theme]}>{` ${anime.synopsis}`}</span>\n                        </div>\n                    </div>\n                </>\n            ) : (\n                <div>LOADING...</div>\n            )}\n\n            <button type=\"button\" className={`${styles.btn} btn btn-primary`} onClick={handleClick}>\n                Назад\n            </button>\n        </div>\n    );\n}\n\nexport {DetailedItem};\n"],"names":["DetailedItem","navigate","useNavigate","theme","useContext","ThemeContext","ThemeClass","dark","styles","light","params","useParams","anime","useDataFetching","concat","id","_jsxs","className","cn","container","children","_Fragment","_jsx","title","description","src","image","alt","info","info_item","alternativeTitles","type","episodes","status","genres","ranking","synopsis","btn","onClick"],"sourceRoot":""}