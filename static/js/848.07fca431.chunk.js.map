{"version":3,"file":"static/js/848.07fca431.chunk.js","mappings":"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","sources":["components/FavoriteSvg/FavoriteSvg.tsx","webpack://anime-list/./src/components/StartSvg/StarSvg.module.css?d4cf","components/StartSvg/StarSvg.tsx","webpack://anime-list/./src/components/Card/Card.module.css?4f06","components/Card/Card.tsx","webpack://anime-list/./src/components/CardList/CardList.module.css?f86e","components/CardList/CardList.tsx","webpack://anime-list/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.tsx","services/updateHistory.ts","components/SearchResultsList/SearchResultsList.tsx","webpack://anime-list/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.tsx","webpack://anime-list/./src/pages/Search/Search.module.css?89fb","pages/Search/Search.tsx","services/applyFilter.ts","store/favorite/selectors.ts"],"sourcesContent":["function FavoriteSvg() {\n    return (\n        <svg\n            width=\"23\"\n            height=\"20\"\n            viewBox=\"0 0 23 20\"\n            fill=\"currentColor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n        >\n            <path\n                d=\"M20.3807 2.59133C19.8676 2.08683 19.2583 1.68663 18.5878 1.41358C17.9172 1.14054 17.1985 1 16.4727 1C15.7468 1 15.0281 1.14054 14.3576 1.41358C13.687 1.68663 13.0778 2.08683 12.5646 2.59133L11.4997 3.63785L10.4348 2.59133C9.39834 1.57276 7.99258 1.00053 6.52679 1.00053C5.06099 1.00053 3.65523 1.57276 2.61876 2.59133C1.58229 3.6099 1 4.99139 1 6.43187C1 7.87235 1.58229 9.25383 2.61876 10.2724L3.68367 11.3189L11.4997 19L19.3158 11.3189L20.3807 10.2724C20.8941 9.76814 21.3013 9.16942 21.5791 8.51045C21.857 7.85148 22 7.14517 22 6.43187C22 5.71857 21.857 5.01225 21.5791 4.35328C21.3013 3.69431 20.8941 3.09559 20.3807 2.59133Z\"\n                fill=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n        </svg>\n    );\n}\n\nexport {FavoriteSvg};\n","// extracted by mini-css-extract-plugin\nexport default {\"ranking_star\":\"StarSvg_ranking_star__l4Ye3\"};","import styles from './StarSvg.module.css';\n\nfunction StarSvg() {\n    return (\n        <svg className={styles.ranking_star} viewBox=\"0 0 1024 1024\" height=\"1em\" width=\"1em\">\n            <path d=\"M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 00.6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0046.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3z\" />\n        </svg>\n    );\n}\n\nexport {StarSvg};\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__-SwHU\",\"img_wrp\":\"Card_img_wrp__w6RzI\",\"img\":\"Card_img__8Ehvv\",\"card_body\":\"Card_card_body__xpDzb\",\"card_characteristics\":\"Card_card_characteristics__wNOHp\",\"ranking\":\"Card_ranking__dOgZk\",\"ranking_star\":\"Card_ranking_star__gD4Zt\",\"episodes\":\"Card_episodes__eyqo9\",\"title\":\"Card_title__A6GVy\",\"view_btn\":\"Card_view_btn__8AoZW\",\"favorite\":\"Card_favorite__mfXCn\",\"favoriteButton\":\"Card_favoriteButton__-ELin\"};","import {useState} from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {AnimeWithId} from '../../types/animeData';\nimport {addFavorite, deleteFavorite} from '../../store/favorite/favorite';\nimport {getFavorites} from '../../store/favorite/selectors';\nimport {getAuthStatus} from '../../store/auth/selectors';\nimport {useAppDispatch, useAppSelector} from '../../hooks';\nimport {FavoriteSvg} from '../FavoriteSvg/FavoriteSvg';\nimport {StarSvg} from '../StartSvg/StarSvg';\n\nimport styles from './Card.module.css';\n\ntype CardProps = {\n    data: AnimeWithId;\n};\n\nfunction Card({data}: CardProps) {\n    const {id, title, image, ranking, episodes} = data;\n\n    const navigate = useNavigate();\n    const dispatch = useAppDispatch();\n\n    const favorites = useAppSelector(getFavorites);\n    const authStatus = useAppSelector(getAuthStatus);\n\n    const [isFavorite, setIsFavorite] = useState<boolean>(\n        !!favorites.find((item) => item.id === id)\n    );\n\n    const handleLikeClick = (idAnime: string) => {\n        if (isFavorite) {\n            dispatch(deleteFavorite(idAnime));\n            setIsFavorite(false);\n            return;\n        }\n        dispatch(addFavorite(data));\n        setIsFavorite(true);\n    };\n\n    const handleDetailedPageClick = (idAnime: string) => {\n        navigate(`/anime-list/detailed-item/${idAnime}`, {replace: true});\n    };\n\n    return (\n        <article className={`${styles.card} card border-primary`}>\n            {authStatus ? (\n                <button\n                    className={`${styles.favoriteButton} ${isFavorite ? styles.favorite : ''}`}\n                    type=\"button\"\n                    onClick={() => handleLikeClick(id)}\n                >\n                    <FavoriteSvg />\n                </button>\n            ) : null}\n            <div className={`${styles.img_wrp}`}>\n                <img className={`${styles.img}`} src={image} alt={title} />\n            </div>\n            <div className={styles.card_body}>\n                <div className={styles.card_characteristics}>\n                    <div className={styles.ranking}>\n                        <StarSvg />\n                        <div>{ranking}</div>\n                    </div>\n                    <div className={styles.episodes}>{episodes} episodes</div>\n                </div>\n                <h2 className={styles.title}>{title}</h2>\n            </div>\n            <button\n                type=\"button\"\n                className={`${styles.view_btn} btn btn-primary`}\n                onClick={() => handleDetailedPageClick(id)}\n            >\n                View more\n            </button>\n        </article>\n    );\n}\n\nCard.defaultProps = {\n    data: null,\n};\n\nCard.propTypes = {\n    data: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        image: PropTypes.string.isRequired,\n        ranking: PropTypes.number.isRequired,\n        episodes: PropTypes.number.isRequired,\n    }),\n};\n\nexport {Card};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CardList_wrapper__wb2Tq\"};","import PropTypes from 'prop-types';\nimport {Card} from '../Card/Card';\n\nimport {AnimeWithId} from '../../types/animeData';\nimport styles from './CardList.module.css';\n\ntype CardListProps = {\n    cards: AnimeWithId[] | null;\n};\n\nfunction CardList({cards}: CardListProps) {\n    const cardList = cards?.map((item) => (\n        <li key={item.id}>\n            <Card data={item} />\n        </li>\n    ));\n\n    return <ul className={styles.wrapper}>{cardList}</ul>;\n}\n\nCardList.defaultProps = {\n    cards: null,\n};\n\nCardList.propTypes = {\n    cards: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            title: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            ranking: PropTypes.number.isRequired,\n            episodes: PropTypes.number.isRequired,\n        })\n    ),\n};\n\nexport {CardList};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import * as LoaderSign from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nfunction Loader() {\n    return (\n        <div className={styles.loader}>\n            <LoaderSign.Oval ariaLabel=\"loading-indicator\" width=\"100vw\" />{' '}\n        </div>\n    );\n}\n\nexport {Loader};\n","import {HistoryRecord} from '../types/HistoryRecord';\nimport {AnimeWithId} from '../types/animeData';\nimport {localStorageUtil} from '../utils/localStorage';\n\n/**\n * Updates the history of queries made by a logged-in user, by adding a new history record\n */\n\nexport const updateHistory = (user: string, query: string, queryResult: AnimeWithId[] | null) => {\n    if (query === '') {\n        return;\n    }\n\n    const currentHistory = localStorageUtil.getSearchHistory(user);\n\n    const historyRecord: HistoryRecord = {\n        query,\n        timestamp: new Date().toLocaleString(),\n        queryResultNumber: queryResult?.length || 0,\n        queryResultLink: `/anime-list/search/?query=${query}&results=${encodeURIComponent(\n            JSON.stringify(queryResult)\n        )}`,\n    };\n\n    const updatedHistory = [historyRecord, ...currentHistory];\n    localStorageUtil.setSearchHistory(user, updatedHistory);\n};\n","import cn from 'classnames';\nimport {AnimeWithId} from '../../types/animeData';\n\ntype SearchResultsListProps = {\n    input: string;\n    results: AnimeWithId[] | null;\n    maxResults: number;\n};\n\nfunction SearchResultsList({input, results, maxResults}: SearchResultsListProps) {\n    const filteredResults = results?.slice(0, maxResults);\n    return (\n        <div\n            className={cn('search-results-list__wrp', 'dropdown-menu', {\n                show: !!input,\n            })}\n        >\n            {filteredResults?.map((result) => (\n                <a\n                    href={`/anime-list/detailed-item/${result.id}`}\n                    className=\"dropdown-item\"\n                    key={result.id}\n                >\n                    {result.title}\n                </a>\n            ))}\n        </div>\n    );\n}\n\nexport {SearchResultsList};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SearchBar_wrapper__KGK67\",\"input\":\"SearchBar_input__bIy50\"};","import React, {useState, useEffect} from 'react';\nimport {useLocation, useNavigate} from 'react-router-dom';\nimport {debounce} from 'lodash';\nimport PropTypes from 'prop-types';\nimport {applyFilter} from '../../services/applyFilter';\nimport {updateHistory} from '../../services/updateHistory';\nimport {useAppSelector} from '../../hooks';\nimport {getUserName} from '../../store/auth/selectors';\nimport {SearchResultsList} from '../SearchResultsList/SearchResultsList';\n\nimport {AnimeWithId} from '../../types/animeData';\n\nimport styles from './SearchBar.module.css';\n\ntype SearchProps = {\n    data: AnimeWithId[] | null;\n};\n\nfunction SearchBar({data}: SearchProps) {\n    const [input, setInput] = useState<string>('');\n    const [suggests, setSuggests] = useState<AnimeWithId[] | null>(null);\n    const [dropdown, setDropdown] = useState(true);\n\n    const user = useAppSelector(getUserName);\n\n    const navigate = useNavigate();\n\n    const location = useLocation();\n    const userQuery = new URLSearchParams(location.search);\n    const currentQuery = userQuery.get('query') || '';\n\n    useEffect(() => {\n        setInput(currentQuery);\n    }, [currentQuery]);\n\n    const debouncedGenerateSuggests = debounce((userInput: string) => {\n        const filteredAnime = applyFilter(userInput, data);\n        setSuggests(filteredAnime);\n    }, 300);\n\n    const handleChange = ({target: {value}}: React.ChangeEvent<HTMLInputElement>) => {\n        setDropdown(true);\n        setInput(value);\n        debouncedGenerateSuggests(value);\n    };\n\n    const handleBlur = () => {\n        setDropdown(false);\n    };\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        setDropdown(false);\n        setSuggests(null);\n\n        const query = (event.target as HTMLFormElement).search.value;\n        const queryResult = applyFilter(query, data);\n\n        if (user) {\n            updateHistory(user, query, queryResult);\n        }\n\n        navigate(`/anime-list/search/?query=${query}`);\n    };\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit} className={styles.wrapper}>\n                <input\n                    type=\"search\"\n                    value={input}\n                    className={styles.input}\n                    placeholder=\"Search...\"\n                    name=\"search\"\n                    autoComplete=\"off\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                />\n                <button type=\"submit\" className=\"btn btn-secondary my-2 my-sm-0\">\n                    Search\n                </button>\n            </form>\n            {input && dropdown && (\n                <SearchResultsList input={input} results={suggests} maxResults={5} />\n            )}\n        </div>\n    );\n}\n\nSearchBar.defaultProps = {\n    data: null,\n};\n\nSearchBar.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            title: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            ranking: PropTypes.number.isRequired,\n            episodes: PropTypes.number.isRequired,\n        })\n    ),\n};\n\nexport {SearchBar};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Search_container__xaI+z\",\"title\":\"Search_title__ZPO6U\"};","import {useLocation} from 'react-router-dom';\nimport {applyFilter} from '../../services/applyFilter';\nimport {CardList} from '../../components/CardList/CardList';\nimport {Loader} from '../../components/Loader/Loader';\nimport {SearchBar} from '../../components/SearchBar/SearchBar';\nimport {useGetCardsQuery} from '../../api/cardsApi';\nimport styles from './Search.module.css';\n\nfunction Search() {\n    const {data} = useGetCardsQuery();\n    const location = useLocation();\n\n    const userQuery = new URLSearchParams(location.search).get('query');\n\n    const matchingAnime = applyFilter(userQuery, data!);\n\n    const renderContent = () => {\n        if (!userQuery || !userQuery.length) {\n            return (\n                <>\n                    <h4 className={styles.title}>Explore the collection:</h4>\n                    {data ? <CardList cards={data} /> : <Loader />}\n                </>\n            );\n        }\n\n        if (matchingAnime && !matchingAnime?.length) {\n            return <h4 className={styles.title}>No matching anime...</h4>;\n        }\n\n        return (\n            <>\n                <h4 className={styles.title}>Search Results:</h4>\n                {matchingAnime ? <CardList cards={matchingAnime} /> : <Loader />}\n            </>\n        );\n    };\n\n    return (\n        <div className={styles.container}>\n            <SearchBar data={data} />\n            {renderContent()}\n        </div>\n    );\n}\n\nexport {Search};\n","import {AnimeWithId} from '../types/animeData';\n\n/**\n * Filters an array of objects of AnimeInfo type, returning an array of objects only with those titles that include user's query in input\n */\n\nexport const applyFilter = (userInput: string | null, data: AnimeWithId[] | null) => {\n    if (!userInput || !data) {\n        return null;\n    }\n\n    return data.filter((anime) => anime.title.toLowerCase().startsWith(userInput.toLowerCase()));\n};\n","import {AnimeWithId} from '../../types/animeData';\nimport {State} from '../../types/state';\nimport {NameSpace} from '../NameSpace';\n\nexport const getFavorites = (state: State): AnimeWithId[] => state[NameSpace.Favorite].favorites;\n"],"names":["FavoriteSvg","_jsx","width","height","viewBox","fill","xmlns","children","d","strokeLinecap","strokeLinejoin","StarSvg","className","styles","ranking_star","Card","_ref","data","id","title","image","ranking","episodes","navigate","useNavigate","dispatch","useAppDispatch","favorites","useAppSelector","getFavorites","authStatus","getAuthStatus","_useState","useState","find","item","_useState2","_slicedToArray","isFavorite","setIsFavorite","_jsxs","concat","card","favoriteButton","favorite","type","onClick","idAnime","deleteFavorite","addFavorite","handleLikeClick","img_wrp","img","src","alt","card_body","card_characteristics","view_btn","replace","defaultProps","CardList","cards","cardList","map","wrapper","Loader","loader","LoaderSign","ariaLabel","updateHistory","user","query","queryResult","currentHistory","localStorageUtil","getSearchHistory","updatedHistory","timestamp","Date","toLocaleString","queryResultNumber","length","queryResultLink","encodeURIComponent","JSON","stringify","_toConsumableArray","setSearchHistory","SearchResultsList","input","results","maxResults","filteredResults","slice","cn","show","result","href","SearchBar","setInput","_useState3","_useState4","suggests","setSuggests","_useState5","_useState6","dropdown","setDropdown","getUserName","location","useLocation","currentQuery","URLSearchParams","search","get","useEffect","debouncedGenerateSuggests","debounce","userInput","filteredAnime","applyFilter","onSubmit","event","preventDefault","target","value","placeholder","name","autoComplete","onChange","_ref2","onBlur","Search","useGetCardsQuery","userQuery","matchingAnime","container","_Fragment","filter","anime","toLowerCase","startsWith","state","NameSpace","Favorite"],"sourceRoot":""}