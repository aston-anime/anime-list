{"version":3,"file":"static/js/678.6b982344.chunk.js","mappings":"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","sources":["components/FavoriteSvg/FavoriteSvg.tsx","webpack://anime-list/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.tsx","hooks/useDataFetching.ts","webpack://anime-list/./src/pages/Detailed-item/Detailed-item.module.css?2258","pages/Detailed-item/Detailed-item.tsx","store/favorite/selectors.ts"],"sourcesContent":["function FavoriteSvg() {\n    return (\n        <svg\n            width=\"23\"\n            height=\"20\"\n            viewBox=\"0 0 23 20\"\n            fill=\"currentColor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n        >\n            <path\n                d=\"M20.3807 2.59133C19.8676 2.08683 19.2583 1.68663 18.5878 1.41358C17.9172 1.14054 17.1985 1 16.4727 1C15.7468 1 15.0281 1.14054 14.3576 1.41358C13.687 1.68663 13.0778 2.08683 12.5646 2.59133L11.4997 3.63785L10.4348 2.59133C9.39834 1.57276 7.99258 1.00053 6.52679 1.00053C5.06099 1.00053 3.65523 1.57276 2.61876 2.59133C1.58229 3.6099 1 4.99139 1 6.43187C1 7.87235 1.58229 9.25383 2.61876 10.2724L3.68367 11.3189L11.4997 19L19.3158 11.3189L20.3807 10.2724C20.8941 9.76814 21.3013 9.16942 21.5791 8.51045C21.857 7.85148 22 7.14517 22 6.43187C22 5.71857 21.857 5.01225 21.5791 4.35328C21.3013 3.69431 20.8941 3.09559 20.3807 2.59133Z\"\n                fill=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n        </svg>\n    );\n}\n\nexport {FavoriteSvg};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import * as LoaderSign from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nfunction Loader() {\n    return (\n        <div className={styles.loader}>\n            <LoaderSign.Oval ariaLabel=\"loading-indicator\" width=\"100vw\" />{' '}\n        </div>\n    );\n}\n\nexport {Loader};\n","import {useEffect, useState} from 'react';\nimport {AnimeData} from '../types/animeData';\nimport {errorHandle} from '../services/error-handle';\nimport {ErrorType} from '../types/error';\n\ntype OptionsType = {\n    method: string;\n    headers: {\n        'X-RapidAPI-Key': string;\n        'X-RapidAPI-Host': string;\n    };\n};\n\nconst options: OptionsType = {\n    method: 'GET',\n    headers: {\n        'X-RapidAPI-Key': process.env.REACT_APP_EHB_ACCESS_KEY || '',\n        'X-RapidAPI-Host': 'anime-db.p.rapidapi.com',\n    },\n};\n\nconst useDataFetching = (url: string): AnimeData | null => {\n    const [data, setData] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch(url, options);\n                const json = await response.json();\n                setData(json);\n            } catch (error) {\n                // as был согласован\n                errorHandle(error as ErrorType);\n            }\n        };\n        fetchData();\n    }, [url]);\n    return data;\n};\n\nexport {useDataFetching};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Detailed-item_container__7j2xg\",\"customButton\":\"Detailed-item_customButton__HALbr\",\"title\":\"Detailed-item_title__HVqYs\",\"description\":\"Detailed-item_description__f71G-\",\"info\":\"Detailed-item_info__wo7al\",\"info_item\":\"Detailed-item_info_item__3l+sY\",\"light\":\"Detailed-item_light__0091d\",\"favorite\":\"Detailed-item_favorite__TIaIp\",\"favoriteButton\":\"Detailed-item_favoriteButton__jv1UD\",\"imgBlock\":\"Detailed-item_imgBlock__K7yW-\"};","import {useContext, useEffect, useState} from 'react';\nimport {useNavigate, useParams} from 'react-router-dom';\nimport cn from 'classnames';\n\nimport {ThemeContext} from '../../services/theme/ThemeProvider';\nimport {useDataFetching} from '../../hooks/useDataFetching';\nimport {Button} from '../../components/Button/Button';\nimport {FavoriteSvg} from '../../components/FavoriteSvg/FavoriteSvg';\nimport {Loader} from '../../components/Loader/Loader';\nimport {addFavorite, deleteFavorite} from '../../store/favorite/favorite';\nimport {useAppDispatch, useAppSelector} from '../../hooks/index';\nimport {getFavorites} from '../../store/favorite/selectors';\nimport {getAuthStatus} from '../../store/auth/selectors';\nimport {AnimeData} from '../../types/animeData';\n\nimport styles from './Detailed-item.module.css';\n\nfunction DetailedItem() {\n    const dispatch = useAppDispatch();\n    const navigate = useNavigate();\n    const {theme} = useContext(ThemeContext);\n\n    const params = useParams();\n\n    const favorites = useAppSelector(getFavorites);\n    const authStatus = useAppSelector(getAuthStatus);\n\n    const [animeDetailed, setAnimeDetailed] = useState<AnimeData | null>(null);\n\n    const [isFavorite, setIsFavorite] = useState<boolean>(false);\n\n    const anime = useDataFetching(`https://anime-db.p.rapidapi.com/anime/by-id/${params.id}`);\n\n    type ThemeClassType = {\n        dark: string;\n        light: string;\n        [key: string]: string;\n    };\n    const ThemeClass: ThemeClassType = {\n        dark: styles.light,\n        light: 'text-dark',\n    };\n\n    const backButtonHandler = () => {\n        navigate('/anime-list');\n    };\n\n    const handleLikeClick = (idAnime: string | undefined) => {\n        if (isFavorite) {\n            dispatch(deleteFavorite(idAnime));\n            setIsFavorite(false);\n            return;\n        }\n        dispatch(\n            addFavorite({\n                id: animeDetailed?._id,\n                title: animeDetailed?.title,\n                image: animeDetailed?.image,\n                ranking: animeDetailed?.ranking,\n                episodes: animeDetailed?.episodes,\n            })\n        );\n        setIsFavorite(true);\n    };\n\n    useEffect(() => {\n        if (anime) {\n            setAnimeDetailed(anime);\n            setIsFavorite(!!favorites.find((item) => item.id === animeDetailed?._id));\n        }\n    }, [anime, animeDetailed?._id, favorites]);\n\n    return (\n        <div className={cn(styles.container, {'text-primary': theme === 'light'})}>\n            {anime ? (\n                <>\n                    <h2 className={styles.title}>{anime.title}</h2>\n                    <div className={styles.description}>\n                        <div className={styles.imgBlock}>\n                            <img src={anime.image} alt=\"\" />\n                            {authStatus ? (\n                                <button\n                                    className={`${styles.favoriteButton} ${\n                                        isFavorite ? styles.favorite : ''\n                                    }`}\n                                    type=\"button\"\n                                    onClick={() => handleLikeClick(animeDetailed?._id)}\n                                >\n                                    <FavoriteSvg />\n                                </button>\n                            ) : null}\n                        </div>\n                        <div className={styles.info}>\n                            <p className={styles.info_item}>\n                                Alternative Titles:\n                                <span\n                                    className={ThemeClass[theme]}\n                                >{` ${anime.alternativeTitles}`}</span>\n                            </p>\n                            <p className={styles.info_item}>\n                                Type:\n                                <span className={ThemeClass[theme]}>{` ${anime.type}`}</span>\n                            </p>\n                            <p className={styles.info_item}>\n                                Episodes:\n                                <span className={ThemeClass[theme]}>{` ${anime.episodes}`}</span>\n                            </p>\n                            <p className={styles.info_item}>\n                                Status:\n                                <span className={ThemeClass[theme]}>{` ${anime.status}`}</span>\n                            </p>\n                            <p className={styles.info_item}>\n                                Genres:\n                                <span className={ThemeClass[theme]}>{` ${anime.genres}`}</span>\n                            </p>\n                            <p className={styles.info_item}>\n                                Ranking:\n                                <span className={ThemeClass[theme]}>{` ${anime.ranking}`}</span>\n                            </p>\n                        </div>\n                    </div>\n                    <div className={styles.synopsis}>\n                        <div>Synopsis </div>\n                        <div>\n                            <span className={ThemeClass[theme]}>{` ${anime.synopsis}`}</span>\n                        </div>\n                    </div>\n                    <Button\n                        onClick={backButtonHandler}\n                        variant=\"primary\"\n                        className={styles.customButton}\n                    >\n                        ← Back\n                    </Button>\n                </>\n            ) : (\n                <Loader />\n            )}\n        </div>\n    );\n}\n\nexport {DetailedItem};\n","import {AnimeWithId} from '../../types/animeData';\nimport {State} from '../../types/state';\nimport {NameSpace} from '../NameSpace';\n\nexport const getFavorites = (state: State): AnimeWithId[] => state[NameSpace.Favorite].favorites;\n"],"names":["FavoriteSvg","_jsx","width","height","viewBox","fill","xmlns","children","d","strokeLinecap","strokeLinejoin","Loader","_jsxs","className","styles","loader","LoaderSign","ariaLabel","options","method","headers","process","useDataFetching","url","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","json","wrap","_context","prev","next","fetch","sent","t0","errorHandle","stop","apply","arguments","DetailedItem","dispatch","useAppDispatch","navigate","useNavigate","theme","useContext","ThemeContext","params","useParams","favorites","useAppSelector","getFavorites","authStatus","getAuthStatus","animeDetailed","setAnimeDetailed","_useState3","_useState4","isFavorite","setIsFavorite","anime","concat","id","ThemeClass","dark","light","find","item","_id","cn","container","_Fragment","title","description","imgBlock","src","image","alt","favoriteButton","favorite","type","onClick","idAnime","deleteFavorite","addFavorite","ranking","episodes","handleLikeClick","info","info_item","alternativeTitles","status","genres","synopsis","Button","variant","customButton","state","NameSpace","Favorite"],"sourceRoot":""}