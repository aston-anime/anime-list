{"version":3,"file":"static/js/283.26375412.chunk.js","mappings":"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","sources":["webpack://anime-list/./src/components/Card/Card.module.css?4f06","components/Card/Card.tsx","webpack://anime-list/./src/components/CardList/CardList.module.css?f86e","components/CardList/CardList.tsx","webpack://anime-list/./src/components/EntryText/EntryText.module.css?f87e","components/EntryText/EntryText.tsx","components/SearchResultsList/SearchResultsList.tsx","webpack://anime-list/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.tsx","webpack://anime-list/./src/pages/Main/Main.module.css?fe6f","pages/Main/Main.tsx","store/favorite/selectors.ts","utils/localStorage.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__-SwHU\",\"img_wrp\":\"Card_img_wrp__w6RzI\",\"img\":\"Card_img__8Ehvv\",\"card_body\":\"Card_card_body__xpDzb\",\"card_characteristics\":\"Card_card_characteristics__wNOHp\",\"ranking\":\"Card_ranking__dOgZk\",\"ranking_star\":\"Card_ranking_star__gD4Zt\",\"episodes\":\"Card_episodes__eyqo9\",\"title\":\"Card_title__A6GVy\",\"btn\":\"Card_btn__GDQIk\",\"favorite\":\"Card_favorite__mfXCn\",\"favoriteButton\":\"Card_favoriteButton__-ELin\"};","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-unused-vars */\nimport {useEffect, useState} from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {AnimeData} from '../../types/state';\nimport {addFavorite, deleteFavorite} from '../../store/favorite/favorite';\nimport {getFavoriteSelector} from '../../store/favorite/selectors';\nimport {getAuthStatus, getUser} from '../../store/auth/selectors';\nimport {getUserInfoFromLS, setFavoriteToLS} from '../../utils/localStorage';\nimport {useAppDispatch, useAppSelector} from '../../hooks';\n\nimport styles from './Card.module.css';\n\nfunction Card({id, title, image, ranking, episodes}: AnimeData) {\n    const navigate = useNavigate();\n    const dispatch = useAppDispatch();\n\n    const favorite = useAppSelector(getFavoriteSelector);\n    const authStatus = useAppSelector(getAuthStatus);\n    const userName: any = useAppSelector(getUser);\n\n    const [isFavorite, setIsFavorite] = useState<boolean>(\n        !!favorite.find((item) => item.id === id)\n    );\n\n    const userInfo: any = getUserInfoFromLS(userName);\n\n    const handleLikeClick = (idAnime: number) => {\n        if (isFavorite) {\n            dispatch(deleteFavorite(idAnime));\n            setIsFavorite(false);\n            return;\n        }\n\n        dispatch(addFavorite({id, title, image, ranking, episodes}));\n        setIsFavorite(true);\n    };\n\n    const handleDelailedPageClick = (idAnime: number) => {\n        navigate(`detailed-item/${idAnime}`);\n    };\n\n    useEffect(() => {\n        if (authStatus) {\n            setFavoriteToLS(userName, userInfo, favorite);\n        }\n    }, [favorite, userInfo, userName, isFavorite, authStatus]);\n\n    return (\n        <article className={`${styles.card} card border-primary`}>\n            {authStatus ? (\n                <button\n                    className={`${styles.favoriteButton} ${isFavorite ? styles.favorite : ''}`}\n                    type=\"button\"\n                    onClick={() => handleLikeClick(id)}\n                >\n                    <svg\n                        width=\"23\"\n                        height=\"20\"\n                        viewBox=\"0 0 23 20\"\n                        fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            d=\"M20.3807 2.59133C19.8676 2.08683 19.2583 1.68663 18.5878 1.41358C17.9172 1.14054 17.1985 1 16.4727 1C15.7468 1 15.0281 1.14054 14.3576 1.41358C13.687 1.68663 13.0778 2.08683 12.5646 2.59133L11.4997 3.63785L10.4348 2.59133C9.39834 1.57276 7.99258 1.00053 6.52679 1.00053C5.06099 1.00053 3.65523 1.57276 2.61876 2.59133C1.58229 3.6099 1 4.99139 1 6.43187C1 7.87235 1.58229 9.25383 2.61876 10.2724L3.68367 11.3189L11.4997 19L19.3158 11.3189L20.3807 10.2724C20.8941 9.76814 21.3013 9.16942 21.5791 8.51045C21.857 7.85148 22 7.14517 22 6.43187C22 5.71857 21.857 5.01225 21.5791 4.35328C21.3013 3.69431 20.8941 3.09559 20.3807 2.59133Z\"\n                            fill=\"currentColor\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                    </svg>\n                </button>\n            ) : null}\n            <div className={`${styles.img_wrp}`}>\n                <img className={`${styles.img}`} src={image} alt={title} />\n            </div>\n            <div className={`${styles.card_body}`}>\n                <div className={`${styles.card_characteristics}`}>\n                    <div className={`${styles.ranking}`}>\n                        <svg\n                            className={`${styles.ranking_star}`}\n                            viewBox=\"0 0 1024 1024\"\n                            height=\"1em\"\n                            width=\"1em\"\n                        >\n                            <path d=\"M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 00.6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0046.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3z\" />\n                        </svg>\n                        <div>{ranking}</div>\n                    </div>\n                    <div className={`${styles.episodes}`}>{episodes} episodes</div>\n                </div>\n                <h2 className={`${styles.title}`}>{title}</h2>\n            </div>\n            <button\n                type=\"button\"\n                className={`${styles.btn} btn btn-primary`}\n                onClick={() => handleDelailedPageClick(id)}\n            >\n                View more\n            </button>\n        </article>\n    );\n}\n\nCard.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    ranking: PropTypes.number.isRequired,\n    episodes: PropTypes.number.isRequired,\n};\n\nexport {Card};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CardList_wrapper__wb2Tq\"};","import PropTypes from 'prop-types';\nimport {Card} from '../Card/Card';\nimport {AnimeData} from '../../types/state';\n\nimport styles from './CardList.module.css';\n\ntype CardListProps = {\n    cards: AnimeData[];\n};\n\nfunction CardList({cards = []}: CardListProps) {\n    const cardList = cards?.map((item) => (\n        <li key={item.id}>\n            <Card\n                id={item.id}\n                title={item.title}\n                image={item.image}\n                ranking={item.ranking}\n                episodes={item.episodes}\n            />\n        </li>\n    ));\n\n    return <ul className={`${styles.wrapper}`}>{cardList}</ul>;\n}\n\nCardList.defaultProps = {\n    cards: null,\n};\n\nCardList.propTypes = {\n    cards: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            ranking: PropTypes.number.isRequired,\n            episodes: PropTypes.number.isRequired,\n        })\n    ),\n};\n\nexport {CardList};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"EntryText_title__0WqHK\",\"name\":\"EntryText_name__bpL6w\",\"text\":\"EntryText_text__nuLlh\",\"text_search\":\"EntryText_text_search__PJMw5\"};","import {useContext} from 'react';\nimport cn from 'classnames';\nimport {ThemeContext} from '../../services/theme/ThemeProvider';\nimport styles from './EntryText.module.css';\n\nfunction EntryText() {\n    const {theme} = useContext(ThemeContext);\n\n    return (\n        <div>\n            <h1 className={cn(styles.title, {'text-primary': theme === 'light'})}>\n                Welcome to{' '}\n                <span className={cn(styles.name, {'text-primary': theme === 'light'})}>\n                    Euphoric Serenety!\n                </span>\n            </h1>\n            <h4>Database of top Anime</h4>\n            <p className={styles.text}>\n                Are you a fan of Anime? Look no further! Our Anime Catalogue is your go-to\n                destination for exploring a wide range of captivating and popular anime titles.\n                Immerse yourself in a world of vibrant characters, stunning visuals, and captivating\n                storylines that will leave you spellbound.\n            </p>\n            <p className={cn(styles.text_search, {'text-primary': theme === 'light'})}>\n                Start searching your favourite anime by keywords or genres\n            </p>\n        </div>\n    );\n}\n\nexport {EntryText};\n","import cn from 'classnames';\nimport {AnimeData} from '../../types/state';\n\ntype SearchResultsListProps = {\n    input: string;\n    results: AnimeData[] | null;\n    maxResults: number;\n};\n\nfunction SearchResultsList({input, results, maxResults}: SearchResultsListProps) {\n    const filteredResults = results?.slice(0, maxResults);\n    return (\n        <div\n            className={cn('search-results-list__wrp', 'dropdown-menu', {\n                show: !!input,\n            })}\n            style={{marginTop: '10px'}}\n        >\n            {filteredResults?.map((result) => (\n                <a\n                    href={`/anime-list/detailed-item/${result.id}`}\n                    className=\"dropdown-item\"\n                    key={result.id}\n                >\n                    {result.title}\n                </a>\n            ))}\n        </div>\n    );\n}\n\nexport {SearchResultsList};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SearchBar_wrapper__KGK67\",\"input\":\"SearchBar_input__bIy50\"};","import {useState} from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport {debounce} from 'lodash';\nimport PropTypes from 'prop-types';\nimport {SearchResultsList} from '../SearchResultsList/SearchResultsList';\n\nimport {AnimeData} from '../../types/state';\nimport styles from './SearchBar.module.css';\n\ntype SearchProps = {\n    data: AnimeData[] | null;\n};\n\nfunction SearchBar({data}: SearchProps) {\n    const [input, setInput] = useState<string>('');\n    const [suggests, setSuggests] = useState<AnimeData[] | null>(null);\n\n    const navigate = useNavigate();\n\n    const filterData = (userInput: string) => {\n        const filteredResults = data?.filter(\n            (anime: AnimeData) =>\n                userInput && anime && anime.title && anime.title.toLowerCase().includes(userInput)\n        );\n        setSuggests(filteredResults || null);\n    };\n\n    const debouncedFilterFunc = debounce(filterData, 300);\n\n    const handleChange = (value: string) => {\n        setInput(value);\n        debouncedFilterFunc(value);\n    };\n\n    const handleSearch = () => {\n        navigate(`/anime-list/search`);\n    };\n\n    return (\n        <div>\n            <div className={`${styles.wrapper}`}>\n                <input\n                    type=\"text\"\n                    value={input}\n                    className={`${styles.input}`}\n                    onChange={(e) => handleChange(e.target.value)}\n                    list=\"suggestions\"\n                    placeholder=\"Search...\"\n                />\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-secondary my-2 my-sm-0\"\n                    onClick={handleSearch}\n                >\n                    Search\n                </button>\n            </div>\n            <SearchResultsList input={input} results={suggests} maxResults={5} />\n        </div>\n    );\n}\n\nSearchBar.defaultProps = {\n    data: null,\n};\n\nSearchBar.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            _id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            ranking: PropTypes.number.isRequired,\n            episodes: PropTypes.number.isRequired,\n            setFavoritesAnime: PropTypes.func.isRequired,\n        })\n    ),\n};\n\nexport {SearchBar};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Main_container__92uv-\",\"card_container\":\"Main_card_container__7Zzog\"};","import {CardList} from '../../components/CardList/CardList';\nimport {EntryText} from '../../components/EntryText/EntryText';\nimport {SearchBar} from '../../components/SearchBar/SearchBar';\nimport {useDataFetching} from '../../hooks';\nimport styles from './Main.module.css';\n\nfunction Main() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const fetchedAnimes: any = useDataFetching(\n        'https://anime-db.p.rapidapi.com/anime?page=1&size=5&search=Fullmetal&genres=Fantasy%2CDrama&sortBy=ranking&sortOrder=asc',\n        'main'\n    );\n\n    return (\n        <div className={`${styles.container}`}>\n            <EntryText />\n            <SearchBar data={fetchedAnimes} />\n            <div className={`${styles.card_container}`}>\n                {fetchedAnimes && <CardList cards={fetchedAnimes} />}\n            </div>\n        </div>\n    );\n}\n\nexport {Main};\n","import {State} from '../../types/state';\nimport {NameSpace} from '../NameSpace';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const getFavoriteSelector = (state: State): any[] => state[NameSpace.Favorite].favorite;\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const setFavoriteToLS = (key: string, userInfo: any, value: any) => {\n    localStorage.setItem(key, JSON.stringify({...JSON.parse(userInfo), favorite: value}));\n};\n\nexport const getUserInfoFromLS = (userName: string) => localStorage.getItem(`${userName}`);\n"],"names":["Card","_ref","id","title","image","ranking","episodes","navigate","useNavigate","dispatch","useAppDispatch","favorite","useAppSelector","getFavoriteSelector","authStatus","getAuthStatus","userName","getUser","_useState","useState","find","item","_useState2","_slicedToArray","isFavorite","setIsFavorite","userInfo","getUserInfoFromLS","useEffect","setFavoriteToLS","_jsxs","className","concat","styles","card","children","_jsx","favoriteButton","type","onClick","idAnime","deleteFavorite","addFavorite","handleLikeClick","width","height","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","img_wrp","img","src","alt","card_body","card_characteristics","ranking_star","btn","CardList","_ref$cards","cards","cardList","map","wrapper","defaultProps","EntryText","theme","useContext","ThemeContext","cn","name","text","text_search","SearchResultsList","input","results","maxResults","filteredResults","slice","show","style","marginTop","result","href","SearchBar","data","setInput","_useState3","_useState4","suggests","setSuggests","debouncedFilterFunc","debounce","userInput","filter","anime","toLowerCase","includes","value","onChange","e","target","list","placeholder","Main","fetchedAnimes","useDataFetching","container","card_container","state","NameSpace","Favorite","key","localStorage","setItem","JSON","stringify","_objectSpread","parse","getItem"],"sourceRoot":""}