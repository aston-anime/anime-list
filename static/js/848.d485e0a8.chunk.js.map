{"version":3,"file":"static/js/848.d485e0a8.chunk.js","mappings":"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","sources":["webpack://anime-list/./src/components/Card/Card.module.css?4f06","components/Card/Card.tsx","webpack://anime-list/./src/components/CardList/CardList.module.css?f86e","components/CardList/CardList.tsx","components/SearchResultsList/SearchResultsList.tsx","webpack://anime-list/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.tsx","webpack://anime-list/./src/pages/Search/Search.module.css?89fb","pages/Search/Search.tsx","services/applyFilter.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__-SwHU\",\"img_wrp\":\"Card_img_wrp__w6RzI\",\"img\":\"Card_img__8Ehvv\",\"card_body\":\"Card_card_body__xpDzb\",\"card_characteristics\":\"Card_card_characteristics__wNOHp\",\"ranking\":\"Card_ranking__dOgZk\",\"ranking_star\":\"Card_ranking_star__gD4Zt\",\"episodes\":\"Card_episodes__eyqo9\",\"title\":\"Card_title__A6GVy\",\"btn\":\"Card_btn__GDQIk\",\"favorite\":\"Card_favorite__mfXCn\",\"favoriteButton\":\"Card_favoriteButton__-ELin\"};","/* eslint-disable no-unused-vars */\nimport {useState} from 'react';\nimport {useNavigate} from 'react-router';\n\nimport styles from './Card.module.css';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction Card({_id: id, title, image, ranking, episodes, setFavoritesAnime}: any) {\n    const navigate = useNavigate();\n\n    const [isFavorite, setIsFavorite] = useState<boolean>(\n        !!localStorage.getItem(JSON.stringify(id))\n    );\n\n    const handleLikeClick = (idAnime: number) => {\n        if (isFavorite) {\n            delete localStorage[JSON.stringify(idAnime)];\n            setIsFavorite(false);\n            setFavoritesAnime(Object.values(localStorage).map((item) => JSON.parse(item)));\n            return;\n        }\n\n        localStorage.setItem(\n            JSON.stringify(id),\n            JSON.stringify({id, title, image, ranking, episodes})\n        );\n    };\n\n    const handleClickDetailedPage = (idAnime: number) => {\n        navigate(`/anime-list/detailed-item/${idAnime}`);\n    };\n\n    return (\n        <article className={`${styles.card} card border-primary`}>\n            <button\n                className={`${styles.favoriteButton} ${isFavorite ? styles.favorite : ''}`}\n                type=\"button\"\n                onClick={() => handleLikeClick(id)}\n            >\n                <svg\n                    width=\"23\"\n                    height=\"20\"\n                    viewBox=\"0 0 23 20\"\n                    fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M20.3807 2.59133C19.8676 2.08683 19.2583 1.68663 18.5878 1.41358C17.9172 1.14054 17.1985 1 16.4727 1C15.7468 1 15.0281 1.14054 14.3576 1.41358C13.687 1.68663 13.0778 2.08683 12.5646 2.59133L11.4997 3.63785L10.4348 2.59133C9.39834 1.57276 7.99258 1.00053 6.52679 1.00053C5.06099 1.00053 3.65523 1.57276 2.61876 2.59133C1.58229 3.6099 1 4.99139 1 6.43187C1 7.87235 1.58229 9.25383 2.61876 10.2724L3.68367 11.3189L11.4997 19L19.3158 11.3189L20.3807 10.2724C20.8941 9.76814 21.3013 9.16942 21.5791 8.51045C21.857 7.85148 22 7.14517 22 6.43187C22 5.71857 21.857 5.01225 21.5791 4.35328C21.3013 3.69431 20.8941 3.09559 20.3807 2.59133Z\"\n                        fill=\"currentColor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                    />\n                </svg>\n            </button>\n            <div className={`${styles.img_wrp}`}>\n                <img className={`${styles.img}`} src={image} alt={title} />\n            </div>\n            <div className={`${styles.card_body}`}>\n                <div className={`${styles.card_characteristics}`}>\n                    <div className={`${styles.ranking}`}>\n                        <svg\n                            className={`${styles.ranking_star}`}\n                            viewBox=\"0 0 1024 1024\"\n                            height=\"1em\"\n                            width=\"1em\"\n                        >\n                            <path d=\"M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 00.6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0046.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3z\" />\n                        </svg>\n                        <div>{ranking}</div>\n                    </div>\n                    <div className={`${styles.episodes}`}>{episodes} episodes</div>\n                </div>\n                <h2 className={`${styles.title}`}>{title}</h2>\n            </div>\n            <button\n                type=\"button\"\n                className=\"card__btn btn btn-primary\"\n                onClick={() => handleClickDetailedPage(id)}\n            >\n                View more\n            </button>\n        </article>\n    );\n}\n\nexport {Card};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CardList_wrapper__wb2Tq\"};","import {Card} from '../Card/Card';\nimport {AnimeInfo} from '../../types/state';\n\nimport styles from './CardList.module.css';\n\ntype CardListProps = {\n    cards: AnimeInfo[] | null;\n    // eslint-disable-next-line react/require-default-props, @typescript-eslint/no-explicit-any\n    setFavoritesAnime?: any;\n};\n\nfunction CardList({cards = [], setFavoritesAnime}: CardListProps) {\n    const cardList = cards?.map((item) => (\n        <li key={item.id}>\n            <Card\n                id={item.id}\n                title={item.title}\n                image={item.image}\n                ranking={item.ranking}\n                episodes={item.episodes}\n                setFavoritesAnime={setFavoritesAnime}\n            />\n        </li>\n    ));\n\n    return <ul className={`${styles.wrapper}`}>{cardList}</ul>;\n}\n\nexport {CardList};\n","import cn from 'classnames';\nimport {AnimeInfo} from '../../types/state';\n\ntype SearchResultsListProps = {\n    input: string;\n    results: AnimeInfo[] | null;\n    maxResults: number;\n};\n\nfunction SearchResultsList({input, results, maxResults}: SearchResultsListProps) {\n    const filteredResults = results?.slice(0, maxResults);\n    return (\n        <div\n            className={cn('search-results-list__wrp', 'dropdown-menu', {\n                show: !!input,\n            })}\n            style={{marginTop: '10px'}}\n        >\n            {filteredResults?.map((result) => (\n                <a\n                    href={`/anime-list/detailed-item/${result.id}`}\n                    className=\"dropdown-item\"\n                    key={result.id}\n                >\n                    {result.title}\n                </a>\n            ))}\n        </div>\n    );\n}\n\nexport {SearchResultsList};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SearchBar_wrapper__KGK67\",\"input\":\"SearchBar_input__bIy50\"};","import {useState} from 'react';\nimport {useNavigate} from 'react-router';\nimport {debounce} from 'lodash';\nimport {SearchResultsList} from '../SearchResultsList/SearchResultsList';\nimport {AnimeInfo} from '../../types/state';\nimport {applyFilter} from '../../services/applyFilter';\n\nimport styles from './SearchBar.module.css';\n\ntype SearchProps = {\n    data: AnimeInfo[] | null;\n};\n\nfunction SearchBar({data}: SearchProps) {\n    const [input, setInput] = useState<string>('');\n    const [suggests, setSuggests] = useState<AnimeInfo[] | null>(null);\n    const [showResults, setShowResults] = useState(false);\n\n    const navigate = useNavigate();\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const handleSubmit = (e: any) => {\n        e.preventDefault();\n        const form = e.target;\n\n        const query = form.search.value;\n        setShowResults(false);\n        navigate(`/anime-list/search/?query=${query}`);\n    };\n\n    const filterData = (userInput: string) => {\n        const filteredResults = applyFilter(userInput, data);\n        setSuggests(filteredResults);\n    };\n\n    const debouncedFilterFunc = debounce(filterData, 300);\n\n    const handleChange = (value: string) => {\n        setInput(value);\n        debouncedFilterFunc(value);\n        setShowResults(true);\n    };\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit} className={`${styles.wrapper}`}>\n                <input\n                    type=\"search\"\n                    value={input}\n                    className={`${styles.input}`}\n                    onChange={(e) => {\n                        handleChange(e.target.value);\n                    }}\n                    placeholder=\"Search...\"\n                    name=\"search\"\n                    autoComplete=\"off\"\n                />\n                <button type=\"submit\" className=\"btn btn-secondary my-2 my-sm-0\">\n                    search\n                </button>\n            </form>\n            {showResults && <SearchResultsList input={input} results={suggests} maxResults={5} />}\n        </div>\n    );\n}\n\nexport {SearchBar, applyFilter};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Search_container__xaI+z\",\"title\":\"Search_title__ZPO6U\"};","import {useLocation} from 'react-router-dom';\nimport {AnimeInfo} from '../../types/state';\nimport {CardList} from '../../components/CardList/CardList';\nimport {SearchBar} from '../../components/SearchBar/SearchBar';\nimport {applyFilter} from '../../services/applyFilter';\nimport {useDataFetching} from '../../hooks';\n\nimport styles from './Search.module.css';\n\nfunction Search() {\n    const location = useLocation();\n    const paramValue = new URLSearchParams(location.search).get('query');\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const fetchedAnimes: any = useDataFetching(\n        'https://anime-db.p.rapidapi.com/anime?page=1&size=15&search=Fullmetal&genres=Fantasy%2CDrama&sortBy=ranking&sortOrder=asc',\n        'main'\n    );\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const animeDataBase: AnimeInfo[] = fetchedAnimes?.map((item: any) => {\n        const {_id, ...rest} = item;\n        return {...rest, id: _id};\n    });\n\n    const filteredResults = applyFilter(paramValue, animeDataBase);\n    const isDataLoading = !animeDataBase;\n\n    let message;\n    if (isDataLoading) {\n        message = 'Loading...';\n    } else if (paramValue === null || paramValue.length === 0 || filteredResults!.length === 0) {\n        message = 'No matching Anime...';\n    } else {\n        message = 'Search Results:';\n    }\n\n    return (\n        <div className={styles.container}>\n            <SearchBar data={animeDataBase} />\n            <h4 className={styles.title}>{message}</h4>\n            <CardList cards={filteredResults} />\n        </div>\n    );\n}\n\nexport {Search};\n","import {AnimeInfo} from '../types/state';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const applyFilter = (userInput: any, data: AnimeInfo[] | null) =>\n    data?.filter(\n        (anime: AnimeInfo) =>\n            userInput && anime && anime.title && anime.title.toLowerCase().includes(userInput)\n    ) || null;\n"],"names":["Card","_ref","id","_id","title","image","ranking","episodes","setFavoritesAnime","navigate","useNavigate","_useState","useState","localStorage","getItem","JSON","stringify","_useState2","_slicedToArray","isFavorite","setIsFavorite","_jsxs","className","concat","styles","card","children","_jsx","favoriteButton","favorite","type","onClick","idAnime","Object","values","map","item","parse","setItem","handleLikeClick","width","height","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","img_wrp","img","src","alt","card_body","card_characteristics","ranking_star","CardList","_ref$cards","cards","cardList","wrapper","SearchResultsList","input","results","maxResults","filteredResults","slice","cn","show","style","marginTop","result","href","SearchBar","data","setInput","_useState3","_useState4","suggests","setSuggests","_useState5","_useState6","showResults","setShowResults","debouncedFilterFunc","debounce","userInput","applyFilter","onSubmit","e","preventDefault","query","target","search","value","onChange","placeholder","name","autoComplete","Search","message","location","useLocation","paramValue","URLSearchParams","get","fetchedAnimes","useDataFetching","animeDataBase","rest","_objectWithoutProperties","_excluded","_objectSpread","length","container","filter","anime","toLowerCase","includes"],"sourceRoot":""}