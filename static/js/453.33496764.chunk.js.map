{"version":3,"file":"static/js/453.33496764.chunk.js","mappings":"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","sources":["webpack://anime-list/./src/components/Card/Card.module.css?4f06","components/Card/Card.tsx","webpack://anime-list/./src/components/CardList/CardList.module.css?f86e","components/CardList/CardList.tsx","webpack://anime-list/./src/pages/Favorites/Favorites.module.css?54b5","pages/Favorites/Favorites.tsx","store/favorite/selectors.ts","utils/localStorage.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__-SwHU\",\"img_wrp\":\"Card_img_wrp__w6RzI\",\"img\":\"Card_img__8Ehvv\",\"card_body\":\"Card_card_body__xpDzb\",\"card_characteristics\":\"Card_card_characteristics__wNOHp\",\"ranking\":\"Card_ranking__dOgZk\",\"ranking_star\":\"Card_ranking_star__gD4Zt\",\"episodes\":\"Card_episodes__eyqo9\",\"title\":\"Card_title__A6GVy\",\"view_btn\":\"Card_view_btn__8AoZW\",\"favorite\":\"Card_favorite__mfXCn\",\"favoriteButton\":\"Card_favoriteButton__-ELin\"};","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-unused-vars */\nimport {useEffect, useState} from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {AnimeData} from '../../types/state';\nimport {addFavorite, deleteFavorite} from '../../store/favorite/favorite';\nimport {getFavoriteSelector} from '../../store/favorite/selectors';\nimport {getAuthStatus, getUserName} from '../../store/auth/selectors';\nimport {getUserInfoFromLS, setFavoriteToLS} from '../../utils/localStorage';\nimport {useAppDispatch, useAppSelector} from '../../hooks';\n\nimport styles from './Card.module.css';\n\nfunction Card({id, title, image, ranking, episodes}: AnimeData) {\n    const navigate = useNavigate();\n    const dispatch = useAppDispatch();\n\n    const favorite = useAppSelector(getFavoriteSelector);\n    const authStatus = useAppSelector(getAuthStatus);\n    const userName: string = useAppSelector(getUserName);\n\n    const [isFavorite, setIsFavorite] = useState<boolean>(\n        !!favorite.find((item) => item.id === id)\n    );\n\n    const userInfo: any = getUserInfoFromLS(userName);\n\n    const handleLikeClick = (idAnime: number) => {\n        if (isFavorite) {\n            dispatch(deleteFavorite(idAnime));\n            setIsFavorite(false);\n            return;\n        }\n\n        dispatch(addFavorite({id, title, image, ranking, episodes}));\n        setIsFavorite(true);\n    };\n\n    const handleDelailedPageClick = (idAnime: number) => {\n        navigate(`detailed-item/${idAnime}`);\n    };\n\n    useEffect(() => {\n        if (authStatus) {\n            setFavoriteToLS(userName, userInfo, favorite);\n        }\n    }, [favorite, userInfo, userName, isFavorite, authStatus]);\n\n    return (\n        <article className={`${styles.card} card border-primary`}>\n            {authStatus ? (\n                <button\n                    className={`${styles.favoriteButton} ${isFavorite ? styles.favorite : ''}`}\n                    type=\"button\"\n                    onClick={() => handleLikeClick(id)}\n                >\n                    <svg\n                        width=\"23\"\n                        height=\"20\"\n                        viewBox=\"0 0 23 20\"\n                        fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            d=\"M20.3807 2.59133C19.8676 2.08683 19.2583 1.68663 18.5878 1.41358C17.9172 1.14054 17.1985 1 16.4727 1C15.7468 1 15.0281 1.14054 14.3576 1.41358C13.687 1.68663 13.0778 2.08683 12.5646 2.59133L11.4997 3.63785L10.4348 2.59133C9.39834 1.57276 7.99258 1.00053 6.52679 1.00053C5.06099 1.00053 3.65523 1.57276 2.61876 2.59133C1.58229 3.6099 1 4.99139 1 6.43187C1 7.87235 1.58229 9.25383 2.61876 10.2724L3.68367 11.3189L11.4997 19L19.3158 11.3189L20.3807 10.2724C20.8941 9.76814 21.3013 9.16942 21.5791 8.51045C21.857 7.85148 22 7.14517 22 6.43187C22 5.71857 21.857 5.01225 21.5791 4.35328C21.3013 3.69431 20.8941 3.09559 20.3807 2.59133Z\"\n                            fill=\"currentColor\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                    </svg>\n                </button>\n            ) : null}\n            <div className={`${styles.img_wrp}`}>\n                <img className={`${styles.img}`} src={image} alt={title} />\n            </div>\n            <div className={styles.card_body}>\n                <div className={styles.card_characteristics}>\n                    <div className={styles.ranking}>\n                        <svg\n                            className={styles.ranking_star}\n                            viewBox=\"0 0 1024 1024\"\n                            height=\"1em\"\n                            width=\"1em\"\n                        >\n                            <path d=\"M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 00.6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0046.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3z\" />\n                        </svg>\n                        <div>{ranking}</div>\n                    </div>\n                    <div className={styles.episodes}>{episodes} episodes</div>\n                </div>\n                <h2 className={styles.title}>{title}</h2>\n            </div>\n            <button\n                type=\"button\"\n                className={`${styles.view_btn} btn btn-primary`}\n                onClick={() => handleDelailedPageClick(id)}\n            >\n                View more\n            </button>\n        </article>\n    );\n}\n\nCard.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    ranking: PropTypes.number.isRequired,\n    episodes: PropTypes.number.isRequired,\n};\n\nexport {Card};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CardList_wrapper__wb2Tq\"};","import PropTypes from 'prop-types';\nimport {Card} from '../Card/Card';\nimport {AnimeWithId} from '../../types/state';\n\nimport styles from './CardList.module.css';\n\ntype CardListProps = {\n    cards: AnimeWithId[] | null;\n};\n\nfunction CardList({cards}: CardListProps) {\n    const cardList = cards?.map((item) => (\n        <li key={item.id}>\n            <Card\n                id={item.id}\n                title={item.title}\n                image={item.image}\n                ranking={item.ranking}\n                episodes={item.episodes}\n            />\n        </li>\n    ));\n\n    return <ul className={styles.wrapper}>{cardList}</ul>;\n}\n\nCardList.defaultProps = {\n    cards: null,\n};\n\nCardList.propTypes = {\n    cards: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            ranking: PropTypes.number.isRequired,\n            episodes: PropTypes.number.isRequired,\n        })\n    ),\n};\n\nexport {CardList};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Favorites_btn__hueFl\",\"emptyFavorites\":\"Favorites_emptyFavorites__N4Jku\"};","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {useEffect} from 'react';\nimport {useNavigate} from 'react-router-dom';\n\nimport {useAppSelector} from '../../hooks';\nimport {CardList} from '../../components/CardList/CardList';\nimport {getAuthStatus, getUserName} from '../../store/auth/selectors';\nimport {getFavoriteSelector} from '../../store/favorite/selectors';\nimport {getUserInfoFromLS, setFavoriteToLS} from '../../utils/localStorage';\n\nimport styles from './Favorites.module.css';\n\nfunction Favorites() {\n    const navigate = useNavigate();\n\n    const favorite: any[] = useAppSelector(getFavoriteSelector);\n    const userName: any = useAppSelector(getUserName);\n    const authStatus = useAppSelector(getAuthStatus);\n\n    const userInfo: any = getUserInfoFromLS(userName);\n\n    const backButtonHendler = () => {\n        navigate('/anime-list');\n    };\n\n    useEffect(() => {\n        if (authStatus) {\n            setFavoriteToLS(userName, userInfo, favorite);\n        }\n    }, [authStatus, favorite, userInfo, userName]);\n\n    return (\n        <div className={styles.container}>\n            {favorite.length ? (\n                <div className=\"main-container\">\n                    <div className=\"card-container\">\n                        {favorite && <CardList cards={favorite} />}\n                    </div>\n                </div>\n            ) : (\n                <div className={styles.emptyFavorites}>Favorites are empty</div>\n            )}\n\n            <button\n                type=\"button\"\n                className={`${styles.btn} btn btn-primary`}\n                onClick={backButtonHendler}\n            >\n                Назад\n            </button>\n        </div>\n    );\n}\n\nexport {Favorites};\n","import {State} from '../../types/state';\nimport {NameSpace} from '../NameSpace';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const getFavoriteSelector = (state: State): any[] => state[NameSpace.Favorite].favorite;\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const setFavoriteToLS = (key: string, userInfo: any, value: any) => {\n    localStorage.setItem(key, JSON.stringify({...JSON.parse(userInfo), favorite: value}));\n};\n\nexport const getUserInfoFromLS = (userName: string | undefined) =>\n    localStorage.getItem(`${userName}`);\n"],"names":["Card","_ref","id","title","image","ranking","episodes","navigate","useNavigate","dispatch","useAppDispatch","favorite","useAppSelector","getFavoriteSelector","authStatus","getAuthStatus","userName","getUserName","_useState","useState","find","item","_useState2","_slicedToArray","isFavorite","setIsFavorite","userInfo","getUserInfoFromLS","useEffect","setFavoriteToLS","_jsxs","className","concat","styles","card","children","_jsx","favoriteButton","type","onClick","idAnime","deleteFavorite","addFavorite","handleLikeClick","width","height","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","img_wrp","img","src","alt","card_body","card_characteristics","ranking_star","view_btn","CardList","cards","cardList","map","wrapper","defaultProps","Favorites","container","length","emptyFavorites","btn","state","NameSpace","Favorite","key","value","localStorage","setItem","JSON","stringify","_objectSpread","parse","getItem"],"sourceRoot":""}