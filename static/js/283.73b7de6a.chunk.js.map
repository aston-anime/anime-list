{"version":3,"file":"static/js/283.73b7de6a.chunk.js","mappings":"qKACA,GAAgB,KAAO,mBAAmB,QAAU,sBAAsB,IAAM,kBAAkB,UAAY,wBAAwB,qBAAuB,mCAAmC,QAAU,sBAAsB,aAAe,2BAA2B,SAAW,uBAAuB,MAAQ,oBAAoB,IAAM,kBAAkB,SAAW,uBAAuB,eAAiB,8B,SCMnZ,SAASA,EAAIC,GAAmF,IAAjFC,EAAGD,EAAHC,IAAKC,EAAKF,EAALE,MAAOC,EAAKH,EAALG,MAAOC,EAAOJ,EAAPI,QAASC,EAAQL,EAARK,SAAQC,EAAAN,EAAEO,kBAAAA,OAAiB,IAAAD,EAAG,WAAO,EAACA,EAC7EE,GAAoCC,EAAAA,EAAAA,YAC9BC,aAAaC,QAAQC,KAAKC,UAAUZ,KACzCa,GAAAC,EAAAA,EAAAA,GAAAP,EAAA,GAFMQ,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAkBhC,OACII,EAAAA,EAAAA,MAAA,WAASC,UAAS,GAAAC,OAAKC,EAAOC,KAAI,wBAAuBC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,UACIL,UAAS,GAAAC,OAAKC,EAAOI,eAAc,KAAAL,OAAIJ,EAAaK,EAAOK,SAAW,IACtEC,KAAK,SACLC,QAAS,kBAnBG,SAACC,GACrB,GAAIb,EAIA,cAHON,aAAaE,KAAKC,UAAUgB,IACnCZ,GAAc,QACdV,EAAkBuB,OAAOC,OAAOrB,cAAcsB,KAAI,SAACC,GAAI,OAAKrB,KAAKsB,MAAMD,EAAK,KAIhFvB,aAAayB,QACTvB,KAAKC,UAAUZ,GACfW,KAAKC,UAAU,CAACZ,IAAAA,EAAKC,MAAAA,EAAOC,MAAAA,EAAOC,QAAAA,EAASC,SAAAA,IAEpD,CAO2B+B,CAAgBnC,EAAI,EAACsB,UAEpCC,EAAAA,EAAAA,KAAA,OACIa,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,eACLC,MAAM,6BAA4BlB,UAElCC,EAAAA,EAAAA,KAAA,QACIkB,EAAE,wnBACFF,KAAK,eACLG,cAAc,QACdC,eAAe,eAI3BpB,EAAAA,EAAAA,KAAA,OAAKL,UAAS,GAAAC,OAAKC,EAAOwB,SAAUtB,UAChCC,EAAAA,EAAAA,KAAA,OAAKL,UAAS,GAAAC,OAAKC,EAAOyB,KAAOC,IAAK5C,EAAO6C,IAAK9C,OAEtDgB,EAAAA,EAAAA,MAAA,OAAKC,UAAS,GAAAC,OAAKC,EAAO4B,WAAY1B,SAAA,EAClCL,EAAAA,EAAAA,MAAA,OAAKC,UAAS,GAAAC,OAAKC,EAAO6B,sBAAuB3B,SAAA,EAC7CL,EAAAA,EAAAA,MAAA,OAAKC,UAAS,GAAAC,OAAKC,EAAOjB,SAAUmB,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OACIL,UAAS,GAAAC,OAAKC,EAAO8B,cACrBZ,QAAQ,gBACRD,OAAO,MACPD,MAAM,MAAKd,UAEXC,EAAAA,EAAAA,KAAA,QAAMkB,EAAE,6WAEZlB,EAAAA,EAAAA,KAAA,OAAAD,SAAMnB,QAEVc,EAAAA,EAAAA,MAAA,OAAKC,UAAS,GAAAC,OAAKC,EAAOhB,UAAWkB,SAAA,CAAElB,EAAS,mBAEpDmB,EAAAA,EAAAA,KAAA,MAAIL,UAAS,GAAAC,OAAKC,EAAOnB,OAAQqB,SAAErB,QAEvCsB,EAAAA,EAAAA,KAAA,UAAQG,KAAK,SAASR,UAAS,GAAAC,OAAKC,EAAO+B,IAAG,oBAAmB7B,SAAC,gBAK9E,CCxEA,OAAgB,QAAU,2BCW1B,SAAS8B,EAAQrD,GAAkD,IAADsD,EAAAtD,EAA/CuD,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EAAE/C,EAAiBP,EAAjBO,kBACrBiD,EAAgB,OAALD,QAAK,IAALA,OAAK,EAALA,EAAOvB,KAAI,SAACC,GAAI,OAC7BT,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACzB,EAAI,CACDE,IAAKgC,EAAKhC,IACVC,MAAO+B,EAAK/B,MACZC,MAAO8B,EAAK9B,MACZC,QAAS6B,EAAK7B,QACdC,SAAU4B,EAAK5B,SACfE,kBAAmBA,KAPlB0B,EAAKhC,IAST,IAGT,OAAOuB,EAAAA,EAAAA,KAAA,MAAIL,UAAS,GAAAC,OAAKC,EAAOoC,SAAUlC,SAAEiC,GAChD,CAEAH,EAASK,aAAe,CACpBH,MAAO,K,sHC7BX,GAAgB,MAAQ,yBAAyB,KAAO,wBAAwB,KAAO,wBAAwB,YAAc,gC,SCI7H,SAASI,IACL,IAAOC,GAASC,EAAAA,EAAAA,YAAWC,EAAAA,GAApBF,MAEP,OACI1C,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACIL,EAAAA,EAAAA,MAAA,MAAIC,UAAW4C,IAAG1C,EAAOnB,MAAO,CAAC,eAA0B,UAAV0D,IAAoBrC,SAAA,CAAC,aACvD,KACXC,EAAAA,EAAAA,KAAA,QAAML,UAAW4C,IAAG1C,EAAO2C,KAAM,CAAC,eAA0B,UAAVJ,IAAoBrC,SAAC,2BAI3EC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2BACJC,EAAAA,EAAAA,KAAA,KAAGL,UAAWE,EAAO4C,KAAK1C,SAAC,gSAM3BC,EAAAA,EAAAA,KAAA,KAAGL,UAAW4C,IAAG1C,EAAO6C,YAAa,CAAC,eAA0B,UAAVN,IAAoBrC,SAAC,iEAKvF,C,iCCnBA,SAAS4C,EAAiBnE,GAAwD,IAAtDoE,EAAKpE,EAALoE,MAAOC,EAAOrE,EAAPqE,QAASC,EAAUtE,EAAVsE,WAClCC,EAAyB,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASG,MAAM,EAAGF,GAC1C,OACI9C,EAAAA,EAAAA,KAAA,OACIL,UAAW4C,IAAG,2BAA4B,gBAAiB,CACvDU,OAAQL,IAEZM,MAAO,CAACC,UAAW,QAAQpD,SAEX,OAAfgD,QAAe,IAAfA,OAAe,EAAfA,EAAiBvC,KAAI,SAAC4C,GAAM,OACzBpD,EAAAA,EAAAA,KAAA,KACIqD,KAAI,6BAAAzD,OAA+BwD,EAAO3E,KAC1CkB,UAAU,gBAAeI,SAGxBqD,EAAO1E,OAFH0E,EAAO3E,IAGZ,KAIpB,CC5BA,OAAgB,QAAU,2BAA2B,MAAQ,0BCY7D,SAAS6E,EAAS9E,GAAuB,IAArB+E,EAAI/E,EAAJ+E,KAChBvE,GAA0BC,EAAAA,EAAAA,UAAiB,IAAGK,GAAAC,EAAAA,EAAAA,GAAAP,EAAA,GAAvC4D,EAAKtD,EAAA,GAAEkE,EAAQlE,EAAA,GACtBmE,GAAgCxE,EAAAA,EAAAA,UAA6B,MAAKyE,GAAAnE,EAAAA,EAAAA,GAAAkE,EAAA,GAA3DE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,GAAWC,EAAAA,EAAAA,MAUXC,GAAsBC,EAAAA,EAAAA,WART,SAACC,GAChB,IAAMlB,EAAsB,OAAJQ,QAAI,IAAJA,OAAI,EAAJA,EAAMW,QAC1B,SAACC,GAAgB,OACbF,GAAaE,GAASA,EAAMzF,OAASyF,EAAMzF,MAAM0F,cAAcC,SAASJ,EAAU,IAE1FL,EAAYb,GAAmB,KACnC,GAEiD,KAWjD,OACIrD,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACIL,EAAAA,EAAAA,MAAA,OAAKC,UAAS,GAAAC,OAAKC,EAAOoC,SAAUlC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SACIG,KAAK,OACLmE,MAAO1B,EACPjD,UAAS,GAAAC,OAAKC,EAAO+C,OACrB2B,SAAU,SAACC,GAAC,OAhBNF,EAgBwBE,EAAEC,OAAOH,MAfnDd,EAASc,QACTP,EAAoBO,GAFH,IAACA,CAgBuC,EAC7CI,KAAK,cACLC,YAAY,eAEhB3E,EAAAA,EAAAA,KAAA,UACIG,KAAK,SACLR,UAAU,iCACVS,QAlBK,WACjByD,EAAS,qBACb,EAgBsC9D,SACzB,eAILC,EAAAA,EAAAA,KAAC2C,EAAiB,CAACC,MAAOA,EAAOC,QAASc,EAAUb,WAAY,MAG5E,CAEAQ,EAAUpB,aAAe,CACrBqB,KAAM,M,cC9DV,GAAgB,UAAY,wBAAwB,eAAiB,8BCKrE,SAASqB,IACL,IAAMC,GAAgBC,EAAAA,EAAAA,IAClB,4HACA,CACIC,OAAQ,MACRC,QAAS,CACL,iBAAkBC,qDAClB,kBAAmB,6BAK/B,OACIvF,EAAAA,EAAAA,MAAA,OAAKC,UAAS,GAAAC,OAAKC,EAAOqF,WAAYnF,SAAA,EAClCC,EAAAA,EAAAA,KAACmC,EAAS,KACVnC,EAAAA,EAAAA,KAACsD,EAAS,CAACC,KAAMsB,KACjB7E,EAAAA,EAAAA,KAAA,OAAKL,UAAS,GAAAC,OAAKC,EAAOsF,gBAAiBpF,SACtC8E,IAAiB7E,EAAAA,EAAAA,KAAC6B,EAAAA,EAAQ,CAACE,MAAO8C,QAInD,C","sources":["webpack://anime-list/./src/components/Card/Card.module.css?4f06","components/Card/Card.tsx","webpack://anime-list/./src/components/CardList/CardList.module.css?f86e","components/CardList/CardList.tsx","webpack://anime-list/./src/components/EntryText/EntryText.module.css?f87e","components/EntryText/EntryText.tsx","components/SearchResultsList/SearchResultsList.tsx","webpack://anime-list/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.tsx","webpack://anime-list/./src/pages/Main/Main.module.css?fe6f","pages/Main/Main.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__-SwHU\",\"img_wrp\":\"Card_img_wrp__w6RzI\",\"img\":\"Card_img__8Ehvv\",\"card_body\":\"Card_card_body__xpDzb\",\"card_characteristics\":\"Card_card_characteristics__wNOHp\",\"ranking\":\"Card_ranking__dOgZk\",\"ranking_star\":\"Card_ranking_star__gD4Zt\",\"episodes\":\"Card_episodes__eyqo9\",\"title\":\"Card_title__A6GVy\",\"btn\":\"Card_btn__GDQIk\",\"favorite\":\"Card_favorite__mfXCn\",\"favoriteButton\":\"Card_favoriteButton__-ELin\"};","import {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {AnimeData} from '../../types/state';\n\nimport styles from './Card.module.css';\n\nfunction Card({_id, title, image, ranking, episodes, setFavoritesAnime = () => {}}: AnimeData) {\n    const [isFavorite, setIsFavorite] = useState<boolean>(\n        !!localStorage.getItem(JSON.stringify(_id))\n    );\n\n    const handleLikeClick = (idAnime: number) => {\n        if (isFavorite) {\n            delete localStorage[JSON.stringify(idAnime)];\n            setIsFavorite(false);\n            setFavoritesAnime(Object.values(localStorage).map((item) => JSON.parse(item)));\n            return;\n        }\n\n        localStorage.setItem(\n            JSON.stringify(_id),\n            JSON.stringify({_id, title, image, ranking, episodes})\n        );\n    };\n\n    return (\n        <article className={`${styles.card} card border-primary`}>\n            <button\n                className={`${styles.favoriteButton} ${isFavorite ? styles.favorite : ''}`}\n                type=\"button\"\n                onClick={() => handleLikeClick(_id)}\n            >\n                <svg\n                    width=\"23\"\n                    height=\"20\"\n                    viewBox=\"0 0 23 20\"\n                    fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M20.3807 2.59133C19.8676 2.08683 19.2583 1.68663 18.5878 1.41358C17.9172 1.14054 17.1985 1 16.4727 1C15.7468 1 15.0281 1.14054 14.3576 1.41358C13.687 1.68663 13.0778 2.08683 12.5646 2.59133L11.4997 3.63785L10.4348 2.59133C9.39834 1.57276 7.99258 1.00053 6.52679 1.00053C5.06099 1.00053 3.65523 1.57276 2.61876 2.59133C1.58229 3.6099 1 4.99139 1 6.43187C1 7.87235 1.58229 9.25383 2.61876 10.2724L3.68367 11.3189L11.4997 19L19.3158 11.3189L20.3807 10.2724C20.8941 9.76814 21.3013 9.16942 21.5791 8.51045C21.857 7.85148 22 7.14517 22 6.43187C22 5.71857 21.857 5.01225 21.5791 4.35328C21.3013 3.69431 20.8941 3.09559 20.3807 2.59133Z\"\n                        fill=\"currentColor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                    />\n                </svg>\n            </button>\n            <div className={`${styles.img_wrp}`}>\n                <img className={`${styles.img}`} src={image} alt={title} />\n            </div>\n            <div className={`${styles.card_body}`}>\n                <div className={`${styles.card_characteristics}`}>\n                    <div className={`${styles.ranking}`}>\n                        <svg\n                            className={`${styles.ranking_star}`}\n                            viewBox=\"0 0 1024 1024\"\n                            height=\"1em\"\n                            width=\"1em\"\n                        >\n                            <path d=\"M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 00.6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0046.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3z\" />\n                        </svg>\n                        <div>{ranking}</div>\n                    </div>\n                    <div className={`${styles.episodes}`}>{episodes} episodes</div>\n                </div>\n                <h2 className={`${styles.title}`}>{title}</h2>\n            </div>\n            <button type=\"button\" className={`${styles.btn} btn btn-primary`}>\n                View more\n            </button>\n        </article>\n    );\n}\n\nCard.propTypes = {\n    _id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    ranking: PropTypes.number.isRequired,\n    episodes: PropTypes.number.isRequired,\n};\n\nexport {Card};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CardList_wrapper__wb2Tq\"};","import PropTypes from 'prop-types';\nimport {Card} from '../Card/Card';\nimport {AnimeData} from '../../types/state';\n\nimport {SetFavoritesAnime} from '../../types/setFavorites';\nimport styles from './CardList.module.css';\n\ntype CardListProps = {\n    cards: AnimeData[];\n    setFavoritesAnime?: SetFavoritesAnime;\n};\n\nfunction CardList({cards = [], setFavoritesAnime}: CardListProps) {\n    const cardList = cards?.map((item) => (\n        <li key={item._id}>\n            <Card\n                _id={item._id}\n                title={item.title}\n                image={item.image}\n                ranking={item.ranking}\n                episodes={item.episodes}\n                setFavoritesAnime={setFavoritesAnime}\n            />\n        </li>\n    ));\n\n    return <ul className={`${styles.wrapper}`}>{cardList}</ul>;\n}\n\nCardList.defaultProps = {\n    cards: null,\n};\n\nCardList.propTypes = {\n    cards: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            ranking: PropTypes.number.isRequired,\n            episodes: PropTypes.number.isRequired,\n        })\n    ),\n    setFavoritesAnime: PropTypes.func.isRequired,\n};\n\nexport {CardList};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"EntryText_title__0WqHK\",\"name\":\"EntryText_name__bpL6w\",\"text\":\"EntryText_text__nuLlh\",\"text_search\":\"EntryText_text_search__PJMw5\"};","import {useContext} from 'react';\nimport cn from 'classnames';\nimport {ThemeContext} from '../../services/theme/ThemeProvider';\nimport styles from './EntryText.module.css';\n\nfunction EntryText() {\n    const {theme} = useContext(ThemeContext);\n\n    return (\n        <div>\n            <h1 className={cn(styles.title, {'text-primary': theme === 'light'})}>\n                Welcome to{' '}\n                <span className={cn(styles.name, {'text-primary': theme === 'light'})}>\n                    Euphoric Serenety!\n                </span>\n            </h1>\n            <h4>Database of top Anime</h4>\n            <p className={styles.text}>\n                Are you a fan of Anime? Look no further! Our Anime Catalogue is your go-to\n                destination for exploring a wide range of captivating and popular anime titles.\n                Immerse yourself in a world of vibrant characters, stunning visuals, and captivating\n                storylines that will leave you spellbound.\n            </p>\n            <p className={cn(styles.text_search, {'text-primary': theme === 'light'})}>\n                Start searching your favourite anime by keywords or genres\n            </p>\n        </div>\n    );\n}\n\nexport {EntryText};\n","import cn from 'classnames';\nimport {AnimeData} from '../../types/state';\n\ntype SearchResultsListProps = {\n    input: string;\n    results: AnimeData[] | null;\n    maxResults: number;\n};\n\nfunction SearchResultsList({input, results, maxResults}: SearchResultsListProps) {\n    const filteredResults = results?.slice(0, maxResults);\n    return (\n        <div\n            className={cn('search-results-list__wrp', 'dropdown-menu', {\n                show: !!input,\n            })}\n            style={{marginTop: '10px'}}\n        >\n            {filteredResults?.map((result) => (\n                <a\n                    href={`/anime-list/detailed-item/${result._id}`}\n                    className=\"dropdown-item\"\n                    key={result._id}\n                >\n                    {result.title}\n                </a>\n            ))}\n        </div>\n    );\n}\n\nexport {SearchResultsList};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SearchBar_wrapper__KGK67\",\"input\":\"SearchBar_input__bIy50\"};","import {useState} from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport {debounce} from 'lodash';\nimport PropTypes from 'prop-types';\nimport {SearchResultsList} from '../SearchResultsList/SearchResultsList';\n\nimport {AnimeData} from '../../types/state';\nimport styles from './SearchBar.module.css';\n\ntype SearchProps = {\n    data: AnimeData[] | null;\n};\n\nfunction SearchBar({data}: SearchProps) {\n    const [input, setInput] = useState<string>('');\n    const [suggests, setSuggests] = useState<AnimeData[] | null>(null);\n\n    const navigate = useNavigate();\n\n    const filterData = (userInput: string) => {\n        const filteredResults = data?.filter(\n            (anime: AnimeData) =>\n                userInput && anime && anime.title && anime.title.toLowerCase().includes(userInput)\n        );\n        setSuggests(filteredResults || null);\n    };\n\n    const debouncedFilterFunc = debounce(filterData, 300);\n\n    const handleChange = (value: string) => {\n        setInput(value);\n        debouncedFilterFunc(value);\n    };\n\n    const handleSearch = () => {\n        navigate(`/anime-list/search`);\n    };\n\n    return (\n        <div>\n            <div className={`${styles.wrapper}`}>\n                <input\n                    type=\"text\"\n                    value={input}\n                    className={`${styles.input}`}\n                    onChange={(e) => handleChange(e.target.value)}\n                    list=\"suggestions\"\n                    placeholder=\"Search...\"\n                />\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-secondary my-2 my-sm-0\"\n                    onClick={handleSearch}\n                >\n                    Search\n                </button>\n            </div>\n            <SearchResultsList input={input} results={suggests} maxResults={5} />\n        </div>\n    );\n}\n\nSearchBar.defaultProps = {\n    data: null,\n};\n\nSearchBar.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            _id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            ranking: PropTypes.number.isRequired,\n            episodes: PropTypes.number.isRequired,\n            setFavoritesAnime: PropTypes.func.isRequired,\n        })\n    ),\n};\n\nexport {SearchBar};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Main_container__92uv-\",\"card_container\":\"Main_card_container__7Zzog\"};","import {CardList} from '../../components/CardList/CardList';\nimport {EntryText} from '../../components/EntryText/EntryText';\nimport {SearchBar} from '../../components/SearchBar/SearchBar';\nimport {useDataFetching} from '../../hooks';\nimport styles from './Main.module.css';\n\nfunction Main() {\n    const fetchedAnimes = useDataFetching(\n        'https://anime-db.p.rapidapi.com/anime?page=1&size=15&search=Fullmetal&genres=Fantasy%2CDrama&sortBy=ranking&sortOrder=asc',\n        {\n            method: 'GET',\n            headers: {\n                'X-RapidAPI-Key': process.env.REACT_APP_EHB_ACCESS_KEY,\n                'X-RapidAPI-Host': 'anime-db.p.rapidapi.com',\n            },\n        }\n    );\n\n    return (\n        <div className={`${styles.container}`}>\n            <EntryText />\n            <SearchBar data={fetchedAnimes} />\n            <div className={`${styles.card_container}`}>\n                {fetchedAnimes && <CardList cards={fetchedAnimes} />}\n            </div>\n        </div>\n    );\n}\n\nexport {Main};\n"],"names":["Card","_ref","_id","title","image","ranking","episodes","_ref$setFavoritesAnim","setFavoritesAnime","_useState","useState","localStorage","getItem","JSON","stringify","_useState2","_slicedToArray","isFavorite","setIsFavorite","_jsxs","className","concat","styles","card","children","_jsx","favoriteButton","favorite","type","onClick","idAnime","Object","values","map","item","parse","setItem","handleLikeClick","width","height","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","img_wrp","img","src","alt","card_body","card_characteristics","ranking_star","btn","CardList","_ref$cards","cards","cardList","wrapper","defaultProps","EntryText","theme","useContext","ThemeContext","cn","name","text","text_search","SearchResultsList","input","results","maxResults","filteredResults","slice","show","style","marginTop","result","href","SearchBar","data","setInput","_useState3","_useState4","suggests","setSuggests","navigate","useNavigate","debouncedFilterFunc","debounce","userInput","filter","anime","toLowerCase","includes","value","onChange","e","target","list","placeholder","Main","fetchedAnimes","useDataFetching","method","headers","process","container","card_container"],"sourceRoot":""}