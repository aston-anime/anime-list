{"version":3,"file":"static/js/848.3fcc519d.chunk.js","mappings":"kMACA,GAAgB,aAAe,+B,SCC/B,SAASA,IACL,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOC,aAAcC,QAAQ,gBAAgBC,OAAO,MAAMC,MAAM,MAAKC,UACjFP,EAAAA,EAAAA,KAAA,QAAMQ,EAAE,2WAGpB,CCPA,OAAgB,KAAO,mBAAmB,QAAU,sBAAsB,IAAM,kBAAkB,UAAY,wBAAwB,qBAAuB,mCAAmC,QAAU,sBAAsB,aAAe,2BAA2B,SAAW,uBAAuB,MAAQ,oBAAoB,SAAW,uBAAuB,SAAW,uBAAuB,eAAiB,8BCgB7Z,SAASC,EAAIC,GAAiC,IAA/BC,EAAID,EAAJC,KAAMC,EAAUF,EAAVE,WACVC,EAAuCF,EAAvCE,GAAIC,EAAmCH,EAAnCG,MAAOC,EAA4BJ,EAA5BI,MAAOC,EAAqBL,EAArBK,QAASC,EAAYN,EAAZM,SAE5BC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAEXC,GAAaC,EAAAA,EAAAA,GAAeC,EAAAA,GAclC,OACIC,EAAAA,EAAAA,MAAA,WAASxB,UAAS,GAAAyB,OAAKxB,EAAOyB,KAAI,wBAAuBpB,SAAA,CACpDe,GACGtB,EAAAA,EAAAA,KAAA,UACIC,UAAS,GAAAyB,OAAKxB,EAAO0B,eAAc,KAAAF,OAAId,EAAaV,EAAO2B,SAAW,IACtEC,KAAK,SACLC,QAAS,kBAlBAC,EAkBsBnB,OAhBvCO,EADAR,GACSqB,EAAAA,EAAAA,IAAeD,IAGnBE,EAAAA,EAAAA,IAAYvB,IALD,IAACqB,CAkByB,EAACzB,UAEnCP,EAAAA,EAAAA,KAACmC,EAAAA,EAAW,MAEhB,MACJnC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAyB,OAAKxB,EAAOkC,SAAU7B,UAChCP,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAyB,OAAKxB,EAAOmC,KAAOC,IAAKvB,EAAOwB,IAAKzB,OAEtDW,EAAAA,EAAAA,MAAA,OAAKxB,UAAWC,EAAOsC,UAAUjC,SAAA,EAC7BkB,EAAAA,EAAAA,MAAA,OAAKxB,UAAWC,EAAOuC,qBAAqBlC,SAAA,EACxCkB,EAAAA,EAAAA,MAAA,OAAKxB,UAAWC,EAAOc,QAAQT,SAAA,EAC3BP,EAAAA,EAAAA,KAACD,EAAO,KACRC,EAAAA,EAAAA,KAAA,OAAAO,SAAMS,QAEVS,EAAAA,EAAAA,MAAA,OAAKxB,UAAWC,EAAOe,SAASV,SAAA,CAAEU,EAAS,mBAE/CjB,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAOY,MAAMP,SAAEO,QAElCd,EAAAA,EAAAA,KAAA,UACI8B,KAAK,SACL7B,UAAS,GAAAyB,OAAKxB,EAAOwC,SAAQ,oBAC7BX,QAAS,WA9BjBb,EAAS,6BAADQ,OA8BuCb,GA9BE,CAAC8B,SAAS,GA8BT,EAACpC,SAC9C,gBAKb,CAEAE,EAAKmC,aAAe,CAChBjC,KAAM,M,aCxEV,GAAgB,QAAU,2BCY1B,SAASkC,EAAQnC,GAA0B,IAAxBoC,EAAKpC,EAALoC,MACTC,GAAYxB,EAAAA,EAAAA,GAAeyB,EAAAA,GAI3BC,EAAgB,OAALH,QAAK,IAALA,OAAK,EAALA,EAAOI,KAAI,SAACC,GAAI,OAC7BnD,EAAAA,EAAAA,KAAA,MAAAO,UACIP,EAAAA,EAAAA,KAACS,EAAI,CAACE,KAAMwC,EAAMvC,YAJDC,EAI6BsC,EAAKtC,KAJjBkC,EAAUK,MAAK,SAACD,GAAI,OAAKA,EAAKtC,KAAOA,CAAE,QAGpEsC,EAAKtC,IAHM,IAACA,CAKhB,IAGT,OAAOb,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAOmD,QAAQ9C,SAAE0C,GAC3C,CAEAJ,EAASD,aAAe,CACpBE,MAAO,K,oEC5BX,SAASX,IACL,OACInC,EAAAA,EAAAA,KAAA,OACIM,MAAM,KACND,OAAO,KACPD,QAAQ,YACRkD,KAAK,eACLC,MAAM,6BAA4BhD,UAElCP,EAAAA,EAAAA,KAAA,QACIQ,EAAE,wnBACF8C,KAAK,eACLE,cAAc,QACdC,eAAe,WAI/B,C,oEChBA,GAAgB,OAAS,wB,SCEzB,SAASC,IACL,OACIjC,EAAAA,EAAAA,MAAA,OAAKxB,UAAWC,EAAOyD,OAAOpD,SAAA,EAC1BP,EAAAA,EAAAA,KAAC4D,EAAAA,GAAe,CAACC,UAAU,oBAAoBvD,MAAM,UAAW,MAG5E,C,8KCAA,SAASwD,EAAiBpD,GAAiD,IAA/CqD,EAAOrD,EAAPqD,QAASC,EAAUtD,EAAVsD,WAC3BC,EAAyB,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASG,MAAM,EAAGF,GAE1C,OACIhE,EAAAA,EAAAA,KAAA,OACIC,UAAWkE,IAAG,2BAA4B,gBAAiB,CACvDC,OAAuB,OAAfH,QAAe,IAAfA,IAAAA,EAAiBI,UAC1B9D,SAEa,OAAf0D,QAAe,IAAfA,OAAe,EAAfA,EAAiBf,KAAI,SAACoB,GAAM,OACzBtE,EAAAA,EAAAA,KAACuE,EAAAA,GAAI,CACDC,GAAE,6BAAA9C,OAA+B4C,EAAOzD,IACxCZ,UAAU,gBAAeM,SAGxB+D,EAAOxD,OAFHwD,EAAOzD,GAGT,KAIvB,C,aC5BA,GAAgB,QAAU,2BAA2B,MAAQ,0BCa7D,SAAS4D,IAAa,IAADC,EACjBC,GAAgCC,EAAAA,EAAAA,UAA+B,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7DI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAAgCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBhE,GAAWC,EAAAA,EAAAA,MACXkE,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,QAAyB,MACpCC,EAA6B,QAAnBf,EAAGa,EAASG,eAAO,IAAAhB,OAAA,EAAhBA,EAAkBiB,MAC9BhF,GAAQiF,EAAAA,EAAAA,GAAiBH,GAAzB9E,KAEDS,GAAWC,EAAAA,EAAAA,KACXwE,GAAOtE,EAAAA,EAAAA,GAAeuE,EAAAA,GAGtBC,EADY,IAAIC,gBAAgBX,EAASY,QAChBC,IAAI,UAAY,GAOzCC,GAAwBC,EAAAA,EAAAA,WALT,WACjBhB,GAAY,GACZJ,EAAYrE,EAChB,GAEqD,KAcrD,OACIc,EAAAA,EAAAA,MAAA,OAAAlB,SAAA,EACIkB,EAAAA,EAAAA,MAAA,QAAM4E,SAdO,SAACC,GAClBA,EAAMC,iBACNnB,GAAY,GACZJ,EAAY,MAEZ,IAAMwB,EAASF,EAAMG,OAA2BR,OAAON,MACjDe,GAAcC,EAAAA,EAAAA,GAAYH,EAAO7F,GAEvCS,GAAS6E,EAAAA,EAAAA,GAAO,CAACJ,KAAAA,EAAMW,MAAAA,EAAOE,YAAAA,KAC9BxF,EAAS,6BAADQ,OAA8B8E,GAC1C,EAIsCvG,UAAWC,EAAOmD,QAAQ9C,SAAA,EACpDP,EAAAA,EAAAA,KAAA,SACI8B,KAAK,SACL8E,IAAKrB,EACLtF,UAAWC,EAAO2G,MAClBC,aAAcf,EACdgB,YAAY,YACZC,KAAK,SACLC,aAAa,MACbC,SAAUf,KAEdnG,EAAAA,EAAAA,KAAA,UAAQ8B,KAAK,SAAS7B,UAAU,iCAAgCM,SAAC,cAIpEkF,GAAcN,IAAYnF,EAAAA,EAAAA,KAAC8D,EAAiB,CAACC,QAASgB,EAAUf,WAAY,MAGzF,CAEAS,EAAU7B,aAAe,CACrBjC,KAAM,K,kICxEV,GAAgB,UAAY,0BAA0B,MAAQ,uB,SCO9D,SAASwG,IACL,IAAOxG,GAAQiF,EAAAA,EAAAA,KAARjF,KACD0E,GAAWC,EAAAA,EAAAA,MAEX8B,EAAY,IAAIpB,gBAAgBX,EAASY,QAAQC,IAAI,SAErDmB,GAAgBV,EAAAA,EAAAA,GAAYS,EAAWzG,GAwB7C,OACIc,EAAAA,EAAAA,MAAA,OAAKxB,UAAWC,EAAOoH,UAAU/G,SAAA,EAC7BP,EAAAA,EAAAA,KAACyE,EAAAA,EAAS,IAvBT2C,GAAcA,EAAU/C,QASzBgD,GAA+B,OAAbA,QAAa,IAAbA,GAAAA,EAAehD,QAKjC5C,EAAAA,EAAAA,MAAA8F,EAAAA,SAAA,CAAAhH,SAAA,EACIP,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAOY,MAAMP,SAAC,oBAC5B8G,GAAgBrH,EAAAA,EAAAA,KAAC6C,EAAAA,EAAQ,CAACC,MAAOuE,KAAoBrH,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,QAN1D1D,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAOY,MAAMP,SAAC,0BARhCkB,EAAAA,EAAAA,MAAA8F,EAAAA,SAAA,CAAAhH,SAAA,EACIP,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAOY,MAAMP,SAAC,4BAC5BI,GAAOX,EAAAA,EAAAA,KAAC6C,EAAAA,EAAQ,CAACC,MAAOnC,KAAWX,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,SAuB/D,C,uDCtCO,IAAMiD,EAAc,SAACa,EAA0B7G,GAClD,OAAK6G,GAAc7G,EAIZA,EAAK8G,QAAO,SAACC,GAAK,OAAKA,EAAM5G,MAAM6G,cAAcC,WAAWJ,EAAUG,cAAc,IAHhF,IAIf,C,oECRa3E,EAAe,SAAC6E,GAAY,OAAoBA,EAAMC,EAAAA,EAAUC,UAAUhF,SAAU,C","sources":["webpack://anime-list/./src/components/StartSvg/StarSvg.module.css?d4cf","components/StartSvg/StarSvg.tsx","webpack://anime-list/./src/components/Card/Card.module.css?4f06","components/Card/Card.tsx","webpack://anime-list/./src/components/CardList/CardList.module.css?f86e","components/CardList/CardList.tsx","components/FavoriteSvg/FavoriteSvg.tsx","webpack://anime-list/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.tsx","components/SearchResultsList/SearchResultsList.tsx","webpack://anime-list/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.tsx","webpack://anime-list/./src/pages/Search/Search.module.css?89fb","pages/Search/Search.tsx","services/applyFilter.ts","store/favorite/selectors.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ranking_star\":\"StarSvg_ranking_star__l4Ye3\"};","import styles from './StarSvg.module.css';\n\nfunction StarSvg() {\n    return (\n        <svg className={styles.ranking_star} viewBox=\"0 0 1024 1024\" height=\"1em\" width=\"1em\">\n            <path d=\"M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 00.6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0046.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3z\" />\n        </svg>\n    );\n}\n\nexport {StarSvg};\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__-SwHU\",\"img_wrp\":\"Card_img_wrp__w6RzI\",\"img\":\"Card_img__8Ehvv\",\"card_body\":\"Card_card_body__xpDzb\",\"card_characteristics\":\"Card_card_characteristics__wNOHp\",\"ranking\":\"Card_ranking__dOgZk\",\"ranking_star\":\"Card_ranking_star__gD4Zt\",\"episodes\":\"Card_episodes__eyqo9\",\"title\":\"Card_title__A6GVy\",\"view_btn\":\"Card_view_btn__8AoZW\",\"favorite\":\"Card_favorite__mfXCn\",\"favoriteButton\":\"Card_favoriteButton__-ELin\"};","import {useNavigate} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {AnimeWithId} from '../../types/animeData';\nimport {addFavorite, deleteFavorite} from '../../store/favorite/favorite';\nimport {getAuthStatus} from '../../store/auth/selectors';\nimport {useAppDispatch, useAppSelector} from '../../hooks';\nimport {FavoriteSvg} from '../FavoriteSvg/FavoriteSvg';\nimport {StarSvg} from '../StartSvg/StarSvg';\n\nimport styles from './Card.module.css';\n\ntype CardProps = {\n    data: AnimeWithId;\n    isFavorite: boolean;\n};\n\nfunction Card({data, isFavorite}: CardProps) {\n    const {id, title, image, ranking, episodes} = data;\n\n    const navigate = useNavigate();\n    const dispatch = useAppDispatch();\n\n    const authStatus = useAppSelector(getAuthStatus);\n\n    const handleLikeClick = (idAnime: string) => {\n        if (isFavorite) {\n            dispatch(deleteFavorite(idAnime));\n            return;\n        }\n        dispatch(addFavorite(data));\n    };\n\n    const handleDetailedPageClick = (idAnime: string) => {\n        navigate(`/anime-list/detailed-item/${idAnime}`, {replace: true});\n    };\n\n    return (\n        <article className={`${styles.card} card border-primary`}>\n            {authStatus ? (\n                <button\n                    className={`${styles.favoriteButton} ${isFavorite ? styles.favorite : ''}`}\n                    type=\"button\"\n                    onClick={() => handleLikeClick(id)}\n                >\n                    <FavoriteSvg />\n                </button>\n            ) : null}\n            <div className={`${styles.img_wrp}`}>\n                <img className={`${styles.img}`} src={image} alt={title} />\n            </div>\n            <div className={styles.card_body}>\n                <div className={styles.card_characteristics}>\n                    <div className={styles.ranking}>\n                        <StarSvg />\n                        <div>{ranking}</div>\n                    </div>\n                    <div className={styles.episodes}>{episodes} episodes</div>\n                </div>\n                <h2 className={styles.title}>{title}</h2>\n            </div>\n            <button\n                type=\"button\"\n                className={`${styles.view_btn} btn btn-primary`}\n                onClick={() => handleDetailedPageClick(id)}\n            >\n                View more\n            </button>\n        </article>\n    );\n}\n\nCard.defaultProps = {\n    data: null,\n};\n\nCard.propTypes = {\n    data: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        image: PropTypes.string.isRequired,\n        ranking: PropTypes.number.isRequired,\n        episodes: PropTypes.number.isRequired,\n    }),\n};\n\nexport {Card};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CardList_wrapper__wb2Tq\"};","import PropTypes from 'prop-types';\n\nimport {Card} from '../Card/Card';\nimport {AnimeWithId} from '../../types/animeData';\nimport {useAppSelector} from '../../hooks';\nimport {getFavorites} from '../../store/favorite/selectors';\n\nimport styles from './CardList.module.css';\n\ntype CardListProps = {\n    cards: AnimeWithId[] | null;\n};\n\nfunction CardList({cards}: CardListProps) {\n    const favorites = useAppSelector(getFavorites);\n\n    const isFavoriteCheck = (id: string) => !!favorites.find((item) => item.id === id);\n\n    const cardList = cards?.map((item) => (\n        <li key={item.id}>\n            <Card data={item} isFavorite={isFavoriteCheck(item.id)} />\n        </li>\n    ));\n\n    return <ul className={styles.wrapper}>{cardList}</ul>;\n}\n\nCardList.defaultProps = {\n    cards: null,\n};\n\nCardList.propTypes = {\n    cards: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            title: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            ranking: PropTypes.number.isRequired,\n            episodes: PropTypes.number.isRequired,\n        })\n    ),\n};\n\nexport {CardList};\n","function FavoriteSvg() {\n    return (\n        <svg\n            width=\"23\"\n            height=\"20\"\n            viewBox=\"0 0 23 20\"\n            fill=\"currentColor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n        >\n            <path\n                d=\"M20.3807 2.59133C19.8676 2.08683 19.2583 1.68663 18.5878 1.41358C17.9172 1.14054 17.1985 1 16.4727 1C15.7468 1 15.0281 1.14054 14.3576 1.41358C13.687 1.68663 13.0778 2.08683 12.5646 2.59133L11.4997 3.63785L10.4348 2.59133C9.39834 1.57276 7.99258 1.00053 6.52679 1.00053C5.06099 1.00053 3.65523 1.57276 2.61876 2.59133C1.58229 3.6099 1 4.99139 1 6.43187C1 7.87235 1.58229 9.25383 2.61876 10.2724L3.68367 11.3189L11.4997 19L19.3158 11.3189L20.3807 10.2724C20.8941 9.76814 21.3013 9.16942 21.5791 8.51045C21.857 7.85148 22 7.14517 22 6.43187C22 5.71857 21.857 5.01225 21.5791 4.35328C21.3013 3.69431 20.8941 3.09559 20.3807 2.59133Z\"\n                fill=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n        </svg>\n    );\n}\n\nexport {FavoriteSvg};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import * as LoaderSign from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nfunction Loader() {\n    return (\n        <div className={styles.loader}>\n            <LoaderSign.Oval ariaLabel=\"loading-indicator\" width=\"100vw\" />{' '}\n        </div>\n    );\n}\n\nexport {Loader};\n","import cn from 'classnames';\nimport {Link} from 'react-router-dom';\nimport {AnimeWithId} from '../../types/animeData';\n\ntype SearchResultsListProps = {\n    results: AnimeWithId[] | null;\n    maxResults: number;\n};\n\nfunction SearchResultsList({results, maxResults}: SearchResultsListProps) {\n    const filteredResults = results?.slice(0, maxResults);\n\n    return (\n        <div\n            className={cn('search-results-list__wrp', 'dropdown-menu', {\n                show: !!filteredResults?.length,\n            })}\n        >\n            {filteredResults?.map((result) => (\n                <Link\n                    to={`/anime-list/detailed-item/${result.id}`}\n                    className=\"dropdown-item\"\n                    key={result.id}\n                >\n                    {result.title}\n                </Link>\n            ))}\n        </div>\n    );\n}\n\nexport {SearchResultsList};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SearchBar_wrapper__KGK67\",\"input\":\"SearchBar_input__bIy50\"};","import React, {useState, useRef} from 'react';\nimport {useLocation, useNavigate} from 'react-router-dom';\nimport {debounce} from 'lodash';\nimport {useGetCardsQuery} from '../../api/cardsApi';\nimport {applyFilter} from '../../services/applyFilter';\nimport {useAppDispatch, useAppSelector} from '../../hooks';\nimport {getUserName} from '../../store/auth/selectors';\nimport {SearchResultsList} from '../SearchResultsList/SearchResultsList';\n\nimport {AnimeWithId} from '../../types/animeData';\n\nimport {search} from '../../store/actions/search';\nimport styles from './SearchBar.module.css';\n\nfunction SearchBar() {\n    const [suggests, setSuggests] = useState<AnimeWithId[] | null>(null);\n    const [dropdown, setDropdown] = useState(true);\n\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const inputRef = useRef<HTMLInputElement>(null);\n    const inputValue = inputRef.current?.value;\n    const {data} = useGetCardsQuery(inputValue);\n\n    const dispatch = useAppDispatch();\n    const user = useAppSelector(getUserName);\n\n    const userQuery = new URLSearchParams(location.search);\n    const currentQuery = userQuery.get('query') || '';\n\n    const handleChange = () => {\n        setDropdown(true);\n        setSuggests(data!);\n    };\n\n    const debouncedHandleChange = debounce(handleChange, 300);\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        setDropdown(false);\n        setSuggests(null);\n\n        const query = (event.target as HTMLFormElement).search.value;\n        const queryResult = applyFilter(query, data!);\n\n        dispatch(search({user, query, queryResult}));\n        navigate(`/anime-list/search/?query=${query}`);\n    };\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit} className={styles.wrapper}>\n                <input\n                    type=\"search\"\n                    ref={inputRef}\n                    className={styles.input}\n                    defaultValue={currentQuery}\n                    placeholder=\"Search...\"\n                    name=\"search\"\n                    autoComplete=\"off\"\n                    onChange={debouncedHandleChange}\n                />\n                <button type=\"submit\" className=\"btn btn-secondary my-2 my-sm-0\">\n                    Search\n                </button>\n            </form>\n            {inputValue && dropdown && <SearchResultsList results={suggests} maxResults={5} />}\n        </div>\n    );\n}\n\nSearchBar.defaultProps = {\n    data: null,\n};\n\nexport {SearchBar};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Search_container__xaI+z\",\"title\":\"Search_title__ZPO6U\"};","import {useLocation} from 'react-router-dom';\nimport {applyFilter} from '../../services/applyFilter';\nimport {CardList} from '../../components/CardList/CardList';\nimport {Loader} from '../../components/Loader/Loader';\nimport {SearchBar} from '../../components/SearchBar/SearchBar';\nimport {useGetCardsQuery} from '../../api/cardsApi';\nimport styles from './Search.module.css';\n\nfunction Search() {\n    const {data} = useGetCardsQuery();\n    const location = useLocation();\n\n    const userQuery = new URLSearchParams(location.search).get('query');\n\n    const matchingAnime = applyFilter(userQuery, data!);\n\n    const renderContent = () => {\n        if (!userQuery || !userQuery.length) {\n            return (\n                <>\n                    <h4 className={styles.title}>Explore the collection:</h4>\n                    {data ? <CardList cards={data} /> : <Loader />}\n                </>\n            );\n        }\n\n        if (matchingAnime && !matchingAnime?.length) {\n            return <h4 className={styles.title}>No matching anime...</h4>;\n        }\n\n        return (\n            <>\n                <h4 className={styles.title}>Search Results:</h4>\n                {matchingAnime ? <CardList cards={matchingAnime} /> : <Loader />}\n            </>\n        );\n    };\n\n    return (\n        <div className={styles.container}>\n            <SearchBar />\n            {renderContent()}\n        </div>\n    );\n}\n\nexport {Search};\n","import {AnimeWithId} from '../types/animeData';\n\n/**\n * Filters an array of objects of AnimeInfo type, returning an array of objects only with those titles that include user's query in input\n */\n\nexport const applyFilter = (userInput: string | null, data: AnimeWithId[] | null) => {\n    if (!userInput || !data) {\n        return null;\n    }\n\n    return data.filter((anime) => anime.title.toLowerCase().startsWith(userInput.toLowerCase()));\n};\n","import {AnimeWithId} from '../../types/animeData';\nimport {State} from '../../types/state';\nimport {NameSpace} from '../NameSpace';\n\nexport const getFavorites = (state: State): AnimeWithId[] => state[NameSpace.Favorite].favorites;\n"],"names":["StarSvg","_jsx","className","styles","ranking_star","viewBox","height","width","children","d","Card","_ref","data","isFavorite","id","title","image","ranking","episodes","navigate","useNavigate","dispatch","useAppDispatch","authStatus","useAppSelector","getAuthStatus","_jsxs","concat","card","favoriteButton","favorite","type","onClick","idAnime","deleteFavorite","addFavorite","FavoriteSvg","img_wrp","img","src","alt","card_body","card_characteristics","view_btn","replace","defaultProps","CardList","cards","favorites","getFavorites","cardList","map","item","find","wrapper","fill","xmlns","strokeLinecap","strokeLinejoin","Loader","loader","LoaderSign","ariaLabel","SearchResultsList","results","maxResults","filteredResults","slice","cn","show","length","result","Link","to","SearchBar","_inputRef$current","_useState","useState","_useState2","_slicedToArray","suggests","setSuggests","_useState3","_useState4","dropdown","setDropdown","location","useLocation","inputRef","useRef","inputValue","current","value","useGetCardsQuery","user","getUserName","currentQuery","URLSearchParams","search","get","debouncedHandleChange","debounce","onSubmit","event","preventDefault","query","target","queryResult","applyFilter","ref","input","defaultValue","placeholder","name","autoComplete","onChange","Search","userQuery","matchingAnime","container","_Fragment","userInput","filter","anime","toLowerCase","startsWith","state","NameSpace","Favorite"],"sourceRoot":""}