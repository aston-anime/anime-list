{"version":3,"file":"static/js/299.a3491ad1.chunk.js","mappings":"wOAAA,SAASA,IACL,OACIC,EAAAA,EAAAA,KAAA,OACIC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,eACLC,MAAM,6BAA4BC,UAElCN,EAAAA,EAAAA,KAAA,QACIO,EAAE,wnBACFH,KAAK,eACLI,cAAc,QACdC,eAAe,WAI/B,CChBA,OAAgB,aAAe,+BCC/B,SAASC,IACL,OACIV,EAAAA,EAAAA,KAAA,OAAKW,UAAWC,EAAOC,aAAcV,QAAQ,gBAAgBD,OAAO,MAAMD,MAAM,MAAKK,UACjFN,EAAAA,EAAAA,KAAA,QAAMO,EAAE,2WAGpB,C,cCPA,GAAgB,KAAO,mBAAmB,QAAU,sBAAsB,IAAM,kBAAkB,UAAY,wBAAwB,qBAAuB,mCAAmC,QAAU,sBAAsB,aAAe,2BAA2B,SAAW,uBAAuB,MAAQ,oBAAoB,SAAW,uBAAuB,SAAW,uBAAuB,eAAiB,8BCc7Z,SAASO,EAAIC,GAAsD,IAApDC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAOC,EAAKH,EAALG,MAAOC,EAAOJ,EAAPI,QAASC,EAAQL,EAARK,SAChCC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAEXC,GAAWC,EAAAA,EAAAA,GAAeC,EAAAA,GAC1BC,GAAaF,EAAAA,EAAAA,GAAeG,EAAAA,GAC5BC,GAAmBJ,EAAAA,EAAAA,GAAeK,EAAAA,GAExCC,GAAoCC,EAAAA,EAAAA,YAC9BR,EAASS,MAAK,SAACC,GAAI,OAAKA,EAAKnB,KAAOA,CAAE,KAC3CoB,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAFMM,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAI1BI,EAAWC,EAAAA,EAAiBC,QAAQZ,GAuB1C,OANAa,EAAAA,EAAAA,YAAU,WACFf,GACAa,EAAAA,EAAiBG,QAAQd,GAAQe,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAML,GAAQ,IAAEf,SAAAA,IAEzD,GAAG,CAACG,EAAYH,EAAUe,EAAUV,KAGhCgB,EAAAA,EAAAA,MAAA,WAASnC,UAAS,GAAAoC,OAAKnC,EAAOoC,KAAI,wBAAuB1C,SAAA,CACpDsB,GACG5B,EAAAA,EAAAA,KAAA,UACIW,UAAS,GAAAoC,OAAKnC,EAAOqC,eAAc,KAAAF,OAAIT,EAAa1B,EAAOa,SAAW,IACtEyB,KAAK,SACLC,QAAS,kBA3BD,SAACC,GACrB,GAAId,EAGA,OAFAf,GAAS8B,EAAAA,EAAAA,IAAeD,SACxBb,GAAc,GAIlBhB,GAAS+B,EAAAA,EAAAA,IAAY,CAACtC,GAAAA,EAAIC,MAAAA,EAAOC,MAAAA,EAAOC,QAAAA,EAASC,SAAAA,KACjDmB,GAAc,EAClB,CAkB+BgB,CAAgBvC,EAAG,EAACV,UAEnCN,EAAAA,EAAAA,KAACD,EAAW,MAEhB,MACJC,EAAAA,EAAAA,KAAA,OAAKW,UAAS,GAAAoC,OAAKnC,EAAO4C,SAAUlD,UAChCN,EAAAA,EAAAA,KAAA,OAAKW,UAAS,GAAAoC,OAAKnC,EAAO6C,KAAOC,IAAKxC,EAAOyC,IAAK1C,OAEtD6B,EAAAA,EAAAA,MAAA,OAAKnC,UAAWC,EAAOgD,UAAUtD,SAAA,EAC7BwC,EAAAA,EAAAA,MAAA,OAAKnC,UAAWC,EAAOiD,qBAAqBvD,SAAA,EACxCwC,EAAAA,EAAAA,MAAA,OAAKnC,UAAWC,EAAOO,QAAQb,SAAA,EAC3BN,EAAAA,EAAAA,KAACU,EAAO,KACRV,EAAAA,EAAAA,KAAA,OAAAM,SAAMa,QAEV2B,EAAAA,EAAAA,MAAA,OAAKnC,UAAWC,EAAOQ,SAASd,SAAA,CAAEc,EAAS,mBAE/CpB,EAAAA,EAAAA,KAAA,MAAIW,UAAWC,EAAOK,MAAMX,SAAEW,QAElCjB,EAAAA,EAAAA,KAAA,UACIkD,KAAK,SACLvC,UAAS,GAAAoC,OAAKnC,EAAOkD,SAAQ,oBAC7BX,QAAS,WApCjB9B,EAAS,6BAAD0B,OAoCuC/B,GApCE,CAAC+C,SAAS,GAoCT,EAACzD,SAC9C,gBAKb,CClFA,OAAgB,QAAU,2BCS1B,SAAS0D,EAAQjD,GAA0B,IAAxBkD,EAAKlD,EAALkD,MACTC,EAAgB,OAALD,QAAK,IAALA,OAAK,EAALA,EAAOE,KAAI,SAAChC,GAAI,OAC7BnC,EAAAA,EAAAA,KAAA,MAAAM,UACIN,EAAAA,EAAAA,KAACc,EAAI,CACDE,GAAImB,EAAKnB,GACTC,MAAOkB,EAAKlB,MACZC,MAAOiB,EAAKjB,MACZC,QAASgB,EAAKhB,QACdC,SAAUe,EAAKf,YANde,EAAKnB,GAQT,IAGT,OAAOhB,EAAAA,EAAAA,KAAA,MAAIW,UAAWC,EAAOwD,QAAQ9D,SAAE4D,GAC3C,CAEAF,EAASK,aAAe,CACpBJ,MAAO,K,oEC1BX,GAAgB,OAAS,wB,SCEzB,SAASK,IACL,OACIxB,EAAAA,EAAAA,MAAA,OAAKnC,UAAWC,EAAO2D,OAAOjE,SAAA,EAC1BN,EAAAA,EAAAA,KAACwE,EAAAA,GAAe,CAACC,UAAU,oBAAoBxE,MAAM,UAAW,MAG5E,C,kGCHayE,EAAc,SAACC,EAA0BC,GAClD,OAAKD,GAAcC,EAIZA,EAAKC,QAAO,SAACC,GAAK,OAAKA,EAAM7D,MAAM8D,cAAcC,SAASL,EAAUI,cAAc,IAH9E,IAIf,E,oBCJaE,EAAgB,SAACC,EAAcC,EAAeC,GACvD,GAAc,KAAVD,EAAJ,CAIA,IAAME,EAAiB5C,EAAAA,EAAiB6C,iBAAiBJ,GAWnDK,EAAc,CATiB,CACjCJ,MAAAA,EACAK,WAAW,IAAIC,MAAOC,iBACtBC,mBAA8B,OAAXP,QAAW,IAAXA,OAAW,EAAXA,EAAaQ,SAAU,EAC1CC,gBAAgB,6BAAD9C,OAA+BoC,EAAK,aAAApC,OAAY+C,mBAC3DC,KAAKC,UAAUZ,OAIcrC,QAAAkD,EAAAA,EAAAA,GAAKZ,IAC1C5C,EAAAA,EAAiByD,iBAAiBhB,EAAMK,EAdxC,CAeJ,E,+CCjBA,SAASY,EAAiBpF,GAAwD,IAAtDqF,EAAKrF,EAALqF,MAAOC,EAAOtF,EAAPsF,QAASC,EAAUvF,EAAVuF,WAClCC,EAAyB,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASG,MAAM,EAAGF,GAC1C,OACItG,EAAAA,EAAAA,KAAA,OACIW,UAAW8F,IAAG,2BAA4B,gBAAiB,CACvDC,OAAQN,IAEZO,MAAO,CAACC,UAAW,QAAQtG,SAEX,OAAfiG,QAAe,IAAfA,OAAe,EAAfA,EAAiBpC,KAAI,SAAC0C,GAAM,OACzB7G,EAAAA,EAAAA,KAAA,KACI8G,KAAI,6BAAA/D,OAA+B8D,EAAO7F,IAC1CL,UAAU,gBAAeL,SAGxBuG,EAAO5F,OAFH4F,EAAO7F,GAGZ,KAIpB,CC5BA,OAAgB,QAAU,2BAA2B,MAAQ,0BCiB7D,SAAS+F,EAAShG,GAAuB,IAArB6D,EAAI7D,EAAJ6D,KAChB5C,GAA0BC,EAAAA,EAAAA,UAAiB,IAAGG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAvCoE,EAAKhE,EAAA,GAAE4E,EAAQ5E,EAAA,GACtB6E,GAAgChF,EAAAA,EAAAA,UAA+B,MAAKiF,GAAA7E,EAAAA,EAAAA,GAAA4E,EAAA,GAA7DE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBhC,GAAOxD,EAAAA,EAAAA,GAAeK,EAAAA,GAEtBV,GAAWC,EAAAA,EAAAA,MAEX+F,GAA4BC,EAAAA,EAAAA,WAAS,SAAC3C,GACxC,IAAM4C,EAAgB7C,EAAYC,EAAWC,GAC7CwC,EAAYG,EAChB,GAAG,KAyBH,OACIzE,EAAAA,EAAAA,MAAA,OAAAxC,SAAA,EACIwC,EAAAA,EAAAA,MAAA,QAAM0E,SApBO,SAACC,GAClBA,EAAMC,iBACNN,EAAY,MAEZ,IAAMjC,EAASsC,EAAME,OAA2BC,OAAOC,MACjDzC,EAAcV,EAAYS,EAAOP,GAEnCM,GACAD,EAAcC,EAAMC,EAAOC,GAG/B/D,EAAS,6BAAD0B,OACyBoC,EAAK,aAAApC,OAAY+C,mBAC1CC,KAAKC,UAAUZ,KAG3B,EAIsCzE,UAAWC,EAAOwD,QAAQ9D,SAAA,EACpDN,EAAAA,EAAAA,KAAA,SACIkD,KAAK,SACL2E,MAAOzB,EACPzF,UAAWC,EAAOwF,MAClB0B,YAAY,YACZC,KAAK,SACLC,aAAa,MACbC,SAjCK,SAAHC,GAAgE,IAAlDL,EAAKK,EAAdP,OAASE,MAC5Bb,EAASa,GACTR,EAA0BQ,EAC9B,KAgCY7H,EAAAA,EAAAA,KAAA,UAAQkD,KAAK,SAASvC,UAAU,iCAAgCL,SAAC,cAIpE8F,IAASpG,EAAAA,EAAAA,KAACmG,EAAiB,CAACC,MAAOA,EAAOC,QAASc,EAAUb,WAAY,MAGtF,CAEAS,EAAU1C,aAAe,CACrBO,KAAM,K,0IC3EV,GAAgB,MAAQ,yBAAyB,KAAO,wBAAwB,KAAO,wBAAwB,YAAc,gC,SCI7H,SAASuD,IACL,IAAOC,GAASC,EAAAA,EAAAA,YAAWC,EAAAA,GAApBF,MAEP,OACItF,EAAAA,EAAAA,MAAA,OAAAxC,SAAA,EACIwC,EAAAA,EAAAA,MAAA,MAAInC,UAAW8F,IAAG7F,EAAOK,MAAO,CAAC,eAA0B,UAAVmH,IAAoB9H,SAAA,CAAC,aACvD,KACXN,EAAAA,EAAAA,KAAA,QAAMW,UAAW8F,IAAG7F,EAAOmH,KAAM,CAAC,eAA0B,UAAVK,IAAoB9H,SAAC,2BAI3EN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,2BACJN,EAAAA,EAAAA,KAAA,KAAGW,UAAWC,EAAO2H,KAAKjI,SAAC,gSAM3BN,EAAAA,EAAAA,KAAA,KAAGW,UAAW8F,IAAG7F,EAAO4H,YAAa,CAAC,eAA0B,UAAVJ,IAAoB9H,SAAC,iEAKvF,C,wBC3BA,GAAgB,UAAY,wBAAwB,eAAiB,8BCMrE,SAASmI,IACL,IACIC,EADG9D,GAAQ+D,EAAAA,EAAAA,KAAR/D,KAGHA,IAEA8D,GADoBzC,EAAAA,EAAAA,GAAIrB,GAAMgE,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAE3H,QAAU0H,EAAE1H,OAAO,IACtCqF,MAAM,EAAG,IAGzC,OACI1D,EAAAA,EAAAA,MAAA,OAAKnC,UAAWC,EAAOmI,UAAUzI,SAAA,EAC7BN,EAAAA,EAAAA,KAACmI,EAAS,KACVnI,EAAAA,EAAAA,KAAC+G,EAAAA,EAAS,CAACnC,KAAMA,IAChBA,GACG5E,EAAAA,EAAAA,KAAA,OAAKW,UAAWC,EAAOoI,eAAe1I,SACjCsE,IAAQ5E,EAAAA,EAAAA,KAACgE,EAAAA,EAAQ,CAACC,MAAOyE,OAG9B1I,EAAAA,EAAAA,KAACsE,EAAAA,EAAM,MAIvB,C","sources":["components/FavoriteSvg/FavoriteSvg.tsx","webpack://anime-list/./src/components/StartSvg/StarSvg.module.css?d4cf","components/StartSvg/StarSvg.tsx","webpack://anime-list/./src/components/Card/Card.module.css?4f06","components/Card/Card.tsx","webpack://anime-list/./src/components/CardList/CardList.module.css?f86e","components/CardList/CardList.tsx","webpack://anime-list/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.tsx","services/applyFilter.ts","services/updateHistory.ts","components/SearchResultsList/SearchResultsList.tsx","webpack://anime-list/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.tsx","webpack://anime-list/./src/components/EntryText/EntryText.module.css?f87e","components/EntryText/EntryText.tsx","webpack://anime-list/./src/pages/Main/Main.module.css?fe6f","pages/Main/Main.tsx"],"sourcesContent":["function FavoriteSvg() {\n    return (\n        <svg\n            width=\"23\"\n            height=\"20\"\n            viewBox=\"0 0 23 20\"\n            fill=\"currentColor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n        >\n            <path\n                d=\"M20.3807 2.59133C19.8676 2.08683 19.2583 1.68663 18.5878 1.41358C17.9172 1.14054 17.1985 1 16.4727 1C15.7468 1 15.0281 1.14054 14.3576 1.41358C13.687 1.68663 13.0778 2.08683 12.5646 2.59133L11.4997 3.63785L10.4348 2.59133C9.39834 1.57276 7.99258 1.00053 6.52679 1.00053C5.06099 1.00053 3.65523 1.57276 2.61876 2.59133C1.58229 3.6099 1 4.99139 1 6.43187C1 7.87235 1.58229 9.25383 2.61876 10.2724L3.68367 11.3189L11.4997 19L19.3158 11.3189L20.3807 10.2724C20.8941 9.76814 21.3013 9.16942 21.5791 8.51045C21.857 7.85148 22 7.14517 22 6.43187C22 5.71857 21.857 5.01225 21.5791 4.35328C21.3013 3.69431 20.8941 3.09559 20.3807 2.59133Z\"\n                fill=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n        </svg>\n    );\n}\n\nexport {FavoriteSvg};\n","// extracted by mini-css-extract-plugin\nexport default {\"ranking_star\":\"StarSvg_ranking_star__l4Ye3\"};","import styles from './StarSvg.module.css';\n\nfunction StarSvg() {\n    return (\n        <svg className={styles.ranking_star} viewBox=\"0 0 1024 1024\" height=\"1em\" width=\"1em\">\n            <path d=\"M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 00.6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0046.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3z\" />\n        </svg>\n    );\n}\n\nexport {StarSvg};\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__-SwHU\",\"img_wrp\":\"Card_img_wrp__w6RzI\",\"img\":\"Card_img__8Ehvv\",\"card_body\":\"Card_card_body__xpDzb\",\"card_characteristics\":\"Card_card_characteristics__wNOHp\",\"ranking\":\"Card_ranking__dOgZk\",\"ranking_star\":\"Card_ranking_star__gD4Zt\",\"episodes\":\"Card_episodes__eyqo9\",\"title\":\"Card_title__A6GVy\",\"view_btn\":\"Card_view_btn__8AoZW\",\"favorite\":\"Card_favorite__mfXCn\",\"favoriteButton\":\"Card_favoriteButton__-ELin\"};","import {useEffect, useState} from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {AnimeWithId} from '../../types/animeData';\nimport {addFavorite, deleteFavorite} from '../../store/favorite/favorite';\nimport {getFavoriteSelector} from '../../store/favorite/selectors';\nimport {getAuthStatus, getUserName} from '../../store/auth/selectors';\nimport {useAppDispatch, useAppSelector} from '../../hooks';\nimport {FavoriteSvg} from '../FavoriteSvg/FavoriteSvg';\nimport {StarSvg} from '../StartSvg/StarSvg';\n\nimport {localStorageUtil} from '../../utils/localStorage';\nimport styles from './Card.module.css';\n\nfunction Card({id, title, image, ranking, episodes}: AnimeWithId) {\n    const navigate = useNavigate();\n    const dispatch = useAppDispatch();\n\n    const favorite = useAppSelector(getFavoriteSelector);\n    const authStatus = useAppSelector(getAuthStatus);\n    const userName: string = useAppSelector(getUserName);\n\n    const [isFavorite, setIsFavorite] = useState<boolean>(\n        !!favorite.find((item) => item.id === id)\n    );\n\n    const userInfo = localStorageUtil.getUser(userName);\n\n    const handleLikeClick = (idAnime: string) => {\n        if (isFavorite) {\n            dispatch(deleteFavorite(idAnime));\n            setIsFavorite(false);\n            return;\n        }\n\n        dispatch(addFavorite({id, title, image, ranking, episodes}));\n        setIsFavorite(true);\n    };\n\n    const handleDetailedPageClick = (idAnime: string) => {\n        navigate(`/anime-list/detailed-item/${idAnime}`, {replace: true});\n    };\n\n    useEffect(() => {\n        if (authStatus) {\n            localStorageUtil.setItem(userName, {...userInfo, favorite});\n        }\n    }, [authStatus, favorite, userInfo, userName]);\n\n    return (\n        <article className={`${styles.card} card border-primary`}>\n            {authStatus ? (\n                <button\n                    className={`${styles.favoriteButton} ${isFavorite ? styles.favorite : ''}`}\n                    type=\"button\"\n                    onClick={() => handleLikeClick(id)}\n                >\n                    <FavoriteSvg />\n                </button>\n            ) : null}\n            <div className={`${styles.img_wrp}`}>\n                <img className={`${styles.img}`} src={image} alt={title} />\n            </div>\n            <div className={styles.card_body}>\n                <div className={styles.card_characteristics}>\n                    <div className={styles.ranking}>\n                        <StarSvg />\n                        <div>{ranking}</div>\n                    </div>\n                    <div className={styles.episodes}>{episodes} episodes</div>\n                </div>\n                <h2 className={styles.title}>{title}</h2>\n            </div>\n            <button\n                type=\"button\"\n                className={`${styles.view_btn} btn btn-primary`}\n                onClick={() => handleDetailedPageClick(id)}\n            >\n                View more\n            </button>\n        </article>\n    );\n}\n\nCard.propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    ranking: PropTypes.number.isRequired,\n    episodes: PropTypes.number.isRequired,\n};\n\nexport {Card};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CardList_wrapper__wb2Tq\"};","import PropTypes from 'prop-types';\nimport {Card} from '../Card/Card';\n\nimport {AnimeWithId} from '../../types/animeData';\nimport styles from './CardList.module.css';\n\ntype CardListProps = {\n    cards: AnimeWithId[] | null;\n};\n\nfunction CardList({cards}: CardListProps) {\n    const cardList = cards?.map((item) => (\n        <li key={item.id}>\n            <Card\n                id={item.id}\n                title={item.title}\n                image={item.image}\n                ranking={item.ranking}\n                episodes={item.episodes}\n            />\n        </li>\n    ));\n\n    return <ul className={styles.wrapper}>{cardList}</ul>;\n}\n\nCardList.defaultProps = {\n    cards: null,\n};\n\nCardList.propTypes = {\n    cards: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            title: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            ranking: PropTypes.number.isRequired,\n            episodes: PropTypes.number.isRequired,\n        })\n    ),\n};\n\nexport {CardList};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import * as LoaderSign from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nfunction Loader() {\n    return (\n        <div className={styles.loader}>\n            <LoaderSign.Oval ariaLabel=\"loading-indicator\" width=\"100vw\" />{' '}\n        </div>\n    );\n}\n\nexport {Loader};\n","import {AnimeWithId} from '../types/animeData';\n\n/**\n * Filters an array of objects of AnimeInfo type, returning an array of objects only with those titles that include user's query in input\n */\n\nexport const applyFilter = (userInput: string | null, data: AnimeWithId[] | null) => {\n    if (!userInput || !data) {\n        return null;\n    }\n\n    return data.filter((anime) => anime.title.toLowerCase().includes(userInput.toLowerCase()));\n};\n","import {HistoryRecord} from '../types/HistoryRecord';\nimport {AnimeWithId} from '../types/animeData';\nimport {localStorageUtil} from '../utils/localStorage';\n\n/**\n * Updates the history of queries made by a logged-in user, by adding a new history record\n */\n\nexport const updateHistory = (user: string, query: string, queryResult: AnimeWithId[] | null) => {\n    if (query === '') {\n        return;\n    }\n\n    const currentHistory = localStorageUtil.getSearchHistory(user);\n\n    const historyRecord: HistoryRecord = {\n        query,\n        timestamp: new Date().toLocaleString(),\n        queryResultNumber: queryResult?.length || 0,\n        queryResultLink: `/anime-list/search/?query=${query}&results=${encodeURIComponent(\n            JSON.stringify(queryResult)\n        )}`,\n    };\n\n    const updatedHistory = [historyRecord, ...currentHistory];\n    localStorageUtil.setSearchHistory(user, updatedHistory);\n};\n","import cn from 'classnames';\nimport {AnimeWithId} from '../../types/animeData';\n\ntype SearchResultsListProps = {\n    input: string;\n    results: AnimeWithId[] | null;\n    maxResults: number;\n};\n\nfunction SearchResultsList({input, results, maxResults}: SearchResultsListProps) {\n    const filteredResults = results?.slice(0, maxResults);\n    return (\n        <div\n            className={cn('search-results-list__wrp', 'dropdown-menu', {\n                show: !!input,\n            })}\n            style={{marginTop: '10px'}}\n        >\n            {filteredResults?.map((result) => (\n                <a\n                    href={`/anime-list/detailed-item/${result.id}`}\n                    className=\"dropdown-item\"\n                    key={result.id}\n                >\n                    {result.title}\n                </a>\n            ))}\n        </div>\n    );\n}\n\nexport {SearchResultsList};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SearchBar_wrapper__KGK67\",\"input\":\"SearchBar_input__bIy50\"};","import React, {useState} from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport {debounce} from 'lodash';\nimport PropTypes from 'prop-types';\nimport {applyFilter} from '../../services/applyFilter';\nimport {updateHistory} from '../../services/updateHistory';\nimport {useAppSelector} from '../../hooks';\nimport {getUserName} from '../../store/auth/selectors';\nimport {SearchResultsList} from '../SearchResultsList/SearchResultsList';\n\nimport {AnimeWithId} from '../../types/animeData';\n\nimport styles from './SearchBar.module.css';\n\ntype SearchProps = {\n    data: AnimeWithId[] | null;\n};\n\nfunction SearchBar({data}: SearchProps) {\n    const [input, setInput] = useState<string>('');\n    const [suggests, setSuggests] = useState<AnimeWithId[] | null>(null);\n\n    const user = useAppSelector(getUserName);\n\n    const navigate = useNavigate();\n\n    const debouncedGenerateSuggests = debounce((userInput: string) => {\n        const filteredAnime = applyFilter(userInput, data);\n        setSuggests(filteredAnime);\n    }, 300);\n\n    const handleChange = ({target: {value}}: React.ChangeEvent<HTMLInputElement>) => {\n        setInput(value);\n        debouncedGenerateSuggests(value);\n    };\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        setSuggests(null);\n\n        const query = (event.target as HTMLFormElement).search.value;\n        const queryResult = applyFilter(query, data);\n\n        if (user) {\n            updateHistory(user, query, queryResult);\n        }\n\n        navigate(\n            `/anime-list/search/?query=${query}&results=${encodeURIComponent(\n                JSON.stringify(queryResult)\n            )}`\n        );\n    };\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit} className={styles.wrapper}>\n                <input\n                    type=\"search\"\n                    value={input}\n                    className={styles.input}\n                    placeholder=\"Search...\"\n                    name=\"search\"\n                    autoComplete=\"off\"\n                    onChange={handleChange}\n                />\n                <button type=\"submit\" className=\"btn btn-secondary my-2 my-sm-0\">\n                    Search\n                </button>\n            </form>\n            {input && <SearchResultsList input={input} results={suggests} maxResults={5} />}\n        </div>\n    );\n}\n\nSearchBar.defaultProps = {\n    data: null,\n};\n\nSearchBar.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            title: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            ranking: PropTypes.number.isRequired,\n            episodes: PropTypes.number.isRequired,\n        })\n    ),\n};\n\nexport {SearchBar};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"EntryText_title__0WqHK\",\"name\":\"EntryText_name__bpL6w\",\"text\":\"EntryText_text__nuLlh\",\"text_search\":\"EntryText_text_search__PJMw5\"};","import {useContext} from 'react';\nimport cn from 'classnames';\nimport {ThemeContext} from '../../services/theme/ThemeProvider';\nimport styles from './EntryText.module.css';\n\nfunction EntryText() {\n    const {theme} = useContext(ThemeContext);\n\n    return (\n        <div>\n            <h1 className={cn(styles.title, {'text-primary': theme === 'light'})}>\n                Welcome to{' '}\n                <span className={cn(styles.name, {'text-primary': theme === 'light'})}>\n                    Euphoric Serenety!\n                </span>\n            </h1>\n            <h4>Database of top Anime</h4>\n            <p className={styles.text}>\n                Are you a fan of Anime? Look no further! Our Anime Catalogue is your go-to\n                destination for exploring a wide range of captivating and popular anime titles.\n                Immerse yourself in a world of vibrant characters, stunning visuals, and captivating\n                storylines that will leave you spellbound.\n            </p>\n            <p className={cn(styles.text_search, {'text-primary': theme === 'light'})}>\n                Start searching your favourite anime by keywords or genres\n            </p>\n        </div>\n    );\n}\n\nexport {EntryText};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Main_container__92uv-\",\"card_container\":\"Main_card_container__7Zzog\"};","import {useGetCardsQuery} from '../../api/cardsApi';\nimport {CardList} from '../../components/CardList/CardList';\nimport {EntryText} from '../../components/EntryText/EntryText';\nimport {Loader} from '../../components/Loader/Loader';\nimport {SearchBar} from '../../components/SearchBar/SearchBar';\nimport styles from './Main.module.css';\n\nfunction Main() {\n    const {data} = useGetCardsQuery();\n    let topRatedAnime;\n\n    if (data) {\n        const sortedAnime = [...data].sort((a, b) => b.ranking - a.ranking);\n        topRatedAnime = sortedAnime.slice(0, 5);\n    }\n\n    return (\n        <div className={styles.container}>\n            <EntryText />\n            <SearchBar data={data} />\n            {data ? (\n                <div className={styles.card_container}>\n                    {data && <CardList cards={topRatedAnime} />}\n                </div>\n            ) : (\n                <Loader />\n            )}\n        </div>\n    );\n}\n\nexport {Main};\n"],"names":["FavoriteSvg","_jsx","width","height","viewBox","fill","xmlns","children","d","strokeLinecap","strokeLinejoin","StarSvg","className","styles","ranking_star","Card","_ref","id","title","image","ranking","episodes","navigate","useNavigate","dispatch","useAppDispatch","favorite","useAppSelector","getFavoriteSelector","authStatus","getAuthStatus","userName","getUserName","_useState","useState","find","item","_useState2","_slicedToArray","isFavorite","setIsFavorite","userInfo","localStorageUtil","getUser","useEffect","setItem","_objectSpread","_jsxs","concat","card","favoriteButton","type","onClick","idAnime","deleteFavorite","addFavorite","handleLikeClick","img_wrp","img","src","alt","card_body","card_characteristics","view_btn","replace","CardList","cards","cardList","map","wrapper","defaultProps","Loader","loader","LoaderSign","ariaLabel","applyFilter","userInput","data","filter","anime","toLowerCase","includes","updateHistory","user","query","queryResult","currentHistory","getSearchHistory","updatedHistory","timestamp","Date","toLocaleString","queryResultNumber","length","queryResultLink","encodeURIComponent","JSON","stringify","_toConsumableArray","setSearchHistory","SearchResultsList","input","results","maxResults","filteredResults","slice","cn","show","style","marginTop","result","href","SearchBar","setInput","_useState3","_useState4","suggests","setSuggests","debouncedGenerateSuggests","debounce","filteredAnime","onSubmit","event","preventDefault","target","search","value","placeholder","name","autoComplete","onChange","_ref2","EntryText","theme","useContext","ThemeContext","text","text_search","Main","topRatedAnime","useGetCardsQuery","sort","a","b","container","card_container"],"sourceRoot":""}