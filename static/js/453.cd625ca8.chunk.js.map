{"version":3,"file":"static/js/453.cd625ca8.chunk.js","mappings":"+KACA,GAAgB,KAAO,mBAAmB,QAAU,sBAAsB,IAAM,kBAAkB,UAAY,wBAAwB,qBAAuB,mCAAmC,QAAU,sBAAsB,aAAe,2BAA2B,SAAW,uBAAuB,MAAQ,oBAAoB,IAAM,kBAAkB,SAAW,uBAAuB,eAAiB,8B,SCOnZ,SAASA,EAAIC,GAAmF,IAAjFC,EAAGD,EAAHC,IAAKC,EAAKF,EAALE,MAAOC,EAAKH,EAALG,MAAOC,EAAOJ,EAAPI,QAASC,EAAQL,EAARK,SAAQC,EAAAN,EAAEO,kBAAAA,OAAiB,IAAAD,EAAG,WAAO,EAACA,EACvEE,GAAWC,EAAAA,EAAAA,MAEjBC,GAAoCC,EAAAA,EAAAA,YAC9BC,aAAaC,QAAQC,KAAKC,UAAUd,KACzCe,GAAAC,EAAAA,EAAAA,GAAAP,EAAA,GAFMQ,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAsBhC,OACII,EAAAA,EAAAA,MAAA,WAASC,UAAS,GAAAC,OAAKC,EAAOC,KAAI,wBAAuBC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,UACIL,UAAS,GAAAC,OAAKC,EAAOI,eAAc,KAAAL,OAAIJ,EAAaK,EAAOK,SAAW,IACtEC,KAAK,SACLC,QAAS,kBAvBG,SAACC,GACrB,GAAIb,EAIA,cAHON,aAAaE,KAAKC,UAAUgB,IACnCZ,GAAc,QACdZ,EAAkByB,OAAOC,OAAOrB,cAAcsB,KAAI,SAACC,GAAI,OAAKrB,KAAKsB,MAAMD,EAAK,KAIhFvB,aAAayB,QACTvB,KAAKC,UAAUd,GACfa,KAAKC,UAAU,CAACd,IAAAA,EAAKC,MAAAA,EAAOC,MAAAA,EAAOC,QAAAA,EAASC,SAAAA,IAEpD,CAW2BiC,CAAgBrC,EAAI,EAACwB,UAEpCC,EAAAA,EAAAA,KAAA,OACIa,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,eACLC,MAAM,6BAA4BlB,UAElCC,EAAAA,EAAAA,KAAA,QACIkB,EAAE,wnBACFF,KAAK,eACLG,cAAc,QACdC,eAAe,eAI3BpB,EAAAA,EAAAA,KAAA,OAAKL,UAAS,GAAAC,OAAKC,EAAOwB,SAAUtB,UAChCC,EAAAA,EAAAA,KAAA,OAAKL,UAAS,GAAAC,OAAKC,EAAOyB,KAAOC,IAAK9C,EAAO+C,IAAKhD,OAEtDkB,EAAAA,EAAAA,MAAA,OAAKC,UAAS,GAAAC,OAAKC,EAAO4B,WAAY1B,SAAA,EAClCL,EAAAA,EAAAA,MAAA,OAAKC,UAAS,GAAAC,OAAKC,EAAO6B,sBAAuB3B,SAAA,EAC7CL,EAAAA,EAAAA,MAAA,OAAKC,UAAS,GAAAC,OAAKC,EAAOnB,SAAUqB,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OACIL,UAAS,GAAAC,OAAKC,EAAO8B,cACrBZ,QAAQ,gBACRD,OAAO,MACPD,MAAM,MAAKd,UAEXC,EAAAA,EAAAA,KAAA,QAAMkB,EAAE,6WAEZlB,EAAAA,EAAAA,KAAA,OAAAD,SAAMrB,QAEVgB,EAAAA,EAAAA,MAAA,OAAKC,UAAS,GAAAC,OAAKC,EAAOlB,UAAWoB,SAAA,CAAEpB,EAAS,mBAEpDqB,EAAAA,EAAAA,KAAA,MAAIL,UAAS,GAAAC,OAAKC,EAAOrB,OAAQuB,SAAEvB,QAEvCwB,EAAAA,EAAAA,KAAA,UACIG,KAAK,SACLR,UAAU,4BACVS,QAAS,WAhDjBtB,EAAS,6BAADc,OAgDuCrB,GAAI,EAACwB,SAC/C,gBAKb,CCnFA,OAAgB,QAAU,2BCW1B,SAAS6B,EAAQtD,GAAkD,IAADuD,EAAAvD,EAA/CwD,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EAAEhD,EAAiBP,EAAjBO,kBACrBkD,EAAgB,OAALD,QAAK,IAALA,OAAK,EAALA,EAAOtB,KAAI,SAACC,GAAI,OAC7BT,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAC3B,EAAI,CACDE,IAAKkC,EAAKlC,IACVC,MAAOiC,EAAKjC,MACZC,MAAOgC,EAAKhC,MACZC,QAAS+B,EAAK/B,QACdC,SAAU8B,EAAK9B,SACfE,kBAAmBA,KAPlB4B,EAAKlC,IAST,IAGT,OAAOyB,EAAAA,EAAAA,KAAA,MAAIL,UAAS,GAAAC,OAAKC,EAAOmC,SAAUjC,SAAEgC,GAChD,CAEAH,EAASK,aAAe,CACpBH,MAAO,K,kHC7BX,GAAgB,IAAM,uBAAuB,eAAiB,mC,SCM9D,SAASI,IACL,IAAMpD,GAAWC,EAAAA,EAAAA,MAKjBC,GAA4CC,EAAAA,EAAAA,UACxCqB,OAAOC,OAAOrB,cAAcsB,KAAI,SAACC,GAAI,OAAKrB,KAAKsB,MAAMD,EAAK,KAC7DnB,GAAAC,EAAAA,EAAAA,GAAAP,EAAA,GAFMmD,EAAc7C,EAAA,GAAET,EAAiBS,EAAA,GAIxC,OACII,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,EAAOuC,UAAUrC,SAAA,CAC5BoC,EAAeE,QACZrC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,iBAAgBI,UAC3BC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,iBAAgBI,SAC1BoC,IACGnC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAQ,CACLE,MAAOK,EACPtD,kBAAmBA,SAMnCmB,EAAAA,EAAAA,KAAA,OAAKL,UAAWE,EAAOyC,eAAevC,SAAC,yBAG3CC,EAAAA,EAAAA,KAAA,UACIG,KAAK,SACLR,UAAS,GAAAC,OAAKC,EAAO0C,IAAG,oBACxBnC,QA5Bc,WACtBtB,EAAS,cACb,EA0BuCiB,SAC9B,qCAKb,C","sources":["webpack://anime-list/./src/components/Card/Card.module.css?4f06","components/Card/Card.tsx","webpack://anime-list/./src/components/CardList/CardList.module.css?f86e","components/CardList/CardList.tsx","webpack://anime-list/./src/pages/Favorites/Favorites.module.css?54b5","pages/Favorites/Favorites.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__-SwHU\",\"img_wrp\":\"Card_img_wrp__w6RzI\",\"img\":\"Card_img__8Ehvv\",\"card_body\":\"Card_card_body__xpDzb\",\"card_characteristics\":\"Card_card_characteristics__wNOHp\",\"ranking\":\"Card_ranking__dOgZk\",\"ranking_star\":\"Card_ranking_star__gD4Zt\",\"episodes\":\"Card_episodes__eyqo9\",\"title\":\"Card_title__A6GVy\",\"btn\":\"Card_btn__GDQIk\",\"favorite\":\"Card_favorite__mfXCn\",\"favoriteButton\":\"Card_favoriteButton__-ELin\"};","import {useState} from 'react';\nimport {useNavigate} from 'react-router';\nimport PropTypes from 'prop-types';\n\nimport {AnimeData} from '../../types/state';\n\nimport styles from './Card.module.css';\n\nfunction Card({_id, title, image, ranking, episodes, setFavoritesAnime = () => {}}: AnimeData) {\n    const navigate = useNavigate();\n\n    const [isFavorite, setIsFavorite] = useState<boolean>(\n        !!localStorage.getItem(JSON.stringify(_id))\n    );\n\n    const handleLikeClick = (idAnime: number) => {\n        if (isFavorite) {\n            delete localStorage[JSON.stringify(idAnime)];\n            setIsFavorite(false);\n            setFavoritesAnime(Object.values(localStorage).map((item) => JSON.parse(item)));\n            return;\n        }\n\n        localStorage.setItem(\n            JSON.stringify(_id),\n            JSON.stringify({_id, title, image, ranking, episodes})\n        );\n    };\n\n    const handleClickDetailedPage = (idAnime: number) => {\n        navigate(`/anime-list/detailed-item/${idAnime}`);\n    };\n\n    return (\n        <article className={`${styles.card} card border-primary`}>\n            <button\n                className={`${styles.favoriteButton} ${isFavorite ? styles.favorite : ''}`}\n                type=\"button\"\n                onClick={() => handleLikeClick(_id)}\n            >\n                <svg\n                    width=\"23\"\n                    height=\"20\"\n                    viewBox=\"0 0 23 20\"\n                    fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M20.3807 2.59133C19.8676 2.08683 19.2583 1.68663 18.5878 1.41358C17.9172 1.14054 17.1985 1 16.4727 1C15.7468 1 15.0281 1.14054 14.3576 1.41358C13.687 1.68663 13.0778 2.08683 12.5646 2.59133L11.4997 3.63785L10.4348 2.59133C9.39834 1.57276 7.99258 1.00053 6.52679 1.00053C5.06099 1.00053 3.65523 1.57276 2.61876 2.59133C1.58229 3.6099 1 4.99139 1 6.43187C1 7.87235 1.58229 9.25383 2.61876 10.2724L3.68367 11.3189L11.4997 19L19.3158 11.3189L20.3807 10.2724C20.8941 9.76814 21.3013 9.16942 21.5791 8.51045C21.857 7.85148 22 7.14517 22 6.43187C22 5.71857 21.857 5.01225 21.5791 4.35328C21.3013 3.69431 20.8941 3.09559 20.3807 2.59133Z\"\n                        fill=\"currentColor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                    />\n                </svg>\n            </button>\n            <div className={`${styles.img_wrp}`}>\n                <img className={`${styles.img}`} src={image} alt={title} />\n            </div>\n            <div className={`${styles.card_body}`}>\n                <div className={`${styles.card_characteristics}`}>\n                    <div className={`${styles.ranking}`}>\n                        <svg\n                            className={`${styles.ranking_star}`}\n                            viewBox=\"0 0 1024 1024\"\n                            height=\"1em\"\n                            width=\"1em\"\n                        >\n                            <path d=\"M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 00.6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0046.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3z\" />\n                        </svg>\n                        <div>{ranking}</div>\n                    </div>\n                    <div className={`${styles.episodes}`}>{episodes} episodes</div>\n                </div>\n                <h2 className={`${styles.title}`}>{title}</h2>\n            </div>\n            <button\n                type=\"button\"\n                className=\"card__btn btn btn-primary\"\n                onClick={() => handleClickDetailedPage(_id)}\n            >\n                View more\n            </button>\n        </article>\n    );\n}\n\nCard.propTypes = {\n    _id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    ranking: PropTypes.number.isRequired,\n    episodes: PropTypes.number.isRequired,\n};\n\nexport {Card};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CardList_wrapper__wb2Tq\"};","import PropTypes from 'prop-types';\nimport {Card} from '../Card/Card';\nimport {AnimeData} from '../../types/state';\n\nimport {SetFavoritesAnime} from '../../types/setFavorites';\nimport styles from './CardList.module.css';\n\ntype CardListProps = {\n    cards: AnimeData[];\n    setFavoritesAnime?: SetFavoritesAnime;\n};\n\nfunction CardList({cards = [], setFavoritesAnime}: CardListProps) {\n    const cardList = cards?.map((item) => (\n        <li key={item._id}>\n            <Card\n                _id={item._id}\n                title={item.title}\n                image={item.image}\n                ranking={item.ranking}\n                episodes={item.episodes}\n                setFavoritesAnime={setFavoritesAnime}\n            />\n        </li>\n    ));\n\n    return <ul className={`${styles.wrapper}`}>{cardList}</ul>;\n}\n\nCardList.defaultProps = {\n    cards: null,\n};\n\nCardList.propTypes = {\n    cards: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            ranking: PropTypes.number.isRequired,\n            episodes: PropTypes.number.isRequired,\n        })\n    ),\n    setFavoritesAnime: PropTypes.func.isRequired,\n};\n\nexport {CardList};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Favorites_btn__hueFl\",\"emptyFavorites\":\"Favorites_emptyFavorites__N4Jku\"};","import {useState} from 'react';\nimport {useNavigate} from 'react-router-dom';\n\nimport {CardList} from '../../components/CardList/CardList';\n\nimport styles from './Favorites.module.css';\n\nfunction Favorites() {\n    const navigate = useNavigate();\n    const backButtonHendler = () => {\n        navigate('/anime-list');\n    };\n\n    const [favoritesAnime, setFavoritesAnime] = useState(\n        Object.values(localStorage).map((item) => JSON.parse(item))\n    );\n\n    return (\n        <div className={styles.container}>\n            {favoritesAnime.length ? (\n                <div className=\"main-container\">\n                    <div className=\"card-container\">\n                        {favoritesAnime && (\n                            <CardList\n                                cards={favoritesAnime}\n                                setFavoritesAnime={setFavoritesAnime}\n                            />\n                        )}\n                    </div>\n                </div>\n            ) : (\n                <div className={styles.emptyFavorites}>Favorites are empty</div>\n            )}\n\n            <button\n                type=\"button\"\n                className={`${styles.btn} btn btn-primary`}\n                onClick={backButtonHendler}\n            >\n                Назад\n            </button>\n        </div>\n    );\n}\n\nexport {Favorites};\n"],"names":["Card","_ref","_id","title","image","ranking","episodes","_ref$setFavoritesAnim","setFavoritesAnime","navigate","useNavigate","_useState","useState","localStorage","getItem","JSON","stringify","_useState2","_slicedToArray","isFavorite","setIsFavorite","_jsxs","className","concat","styles","card","children","_jsx","favoriteButton","favorite","type","onClick","idAnime","Object","values","map","item","parse","setItem","handleLikeClick","width","height","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","img_wrp","img","src","alt","card_body","card_characteristics","ranking_star","CardList","_ref$cards","cards","cardList","wrapper","defaultProps","Favorites","favoritesAnime","container","length","emptyFavorites","btn"],"sourceRoot":""}