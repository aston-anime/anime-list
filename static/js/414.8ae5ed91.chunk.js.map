{"version":3,"file":"static/js/414.8ae5ed91.chunk.js","mappings":"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","sources":["webpack://anime-list/./src/components/Card/Card.module.css?4f06","components/Card/Card.tsx","webpack://anime-list/./src/components/CardList/CardList.module.css?f86e","components/CardList/CardList.tsx","webpack://anime-list/./src/components/EntryText/EntryText.module.css?f87e","components/EntryText/EntryText.tsx","webpack://anime-list/./src/components/SearchInput/SearchInput.module.css?3e06","components/SearchInput/SearchInput.tsx","components/SearchResultsList/SearchResultsList.tsx","components/SearchBar/SearchBar.tsx","webpack://anime-list/./src/pages/Main/Main.module.css?fe6f","pages/Main/Main.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__-SwHU\",\"img_wrp\":\"Card_img_wrp__w6RzI\",\"img\":\"Card_img__8Ehvv\",\"card_body\":\"Card_card_body__xpDzb\",\"card_characteristics\":\"Card_card_characteristics__wNOHp\",\"ranking\":\"Card_ranking__dOgZk\",\"ranking_star\":\"Card_ranking_star__gD4Zt\",\"episodes\":\"Card_episodes__eyqo9\",\"title\":\"Card_title__A6GVy\",\"btn\":\"Card_btn__GDQIk\",\"favorite\":\"Card_favorite__mfXCn\",\"favoriteButton\":\"Card_favoriteButton__-ELin\"};","/* eslint-disable no-unused-vars */\nimport {useState} from 'react';\n\nimport {AnimeData} from '../../types/state';\n\nimport styles from './Card.module.css';\n\nfunction Card({_id: id, title, image, ranking, episodes, setFavoritesAnime}: AnimeData) {\n    const [isFavorite, setIsFavorite] = useState<boolean>(\n        !!localStorage.getItem(JSON.stringify(id))\n    );\n\n    const handleLikeClick = (idAnime: number) => {\n        if (isFavorite) {\n            delete localStorage[JSON.stringify(idAnime)];\n            setIsFavorite(false);\n            setFavoritesAnime(Object.values(localStorage).map((item) => JSON.parse(item)));\n            return;\n        }\n\n        localStorage.setItem(\n            JSON.stringify(id),\n            JSON.stringify({id, title, image, ranking, episodes})\n        );\n    };\n\n    return (\n        <article className={`${styles.card} card border-primary`}>\n            <button\n                className={`${styles.favoriteButton} ${isFavorite ? styles.favorite : ''}`}\n                type=\"button\"\n                onClick={() => handleLikeClick(id)}\n            >\n                <svg\n                    width=\"23\"\n                    height=\"20\"\n                    viewBox=\"0 0 23 20\"\n                    fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M20.3807 2.59133C19.8676 2.08683 19.2583 1.68663 18.5878 1.41358C17.9172 1.14054 17.1985 1 16.4727 1C15.7468 1 15.0281 1.14054 14.3576 1.41358C13.687 1.68663 13.0778 2.08683 12.5646 2.59133L11.4997 3.63785L10.4348 2.59133C9.39834 1.57276 7.99258 1.00053 6.52679 1.00053C5.06099 1.00053 3.65523 1.57276 2.61876 2.59133C1.58229 3.6099 1 4.99139 1 6.43187C1 7.87235 1.58229 9.25383 2.61876 10.2724L3.68367 11.3189L11.4997 19L19.3158 11.3189L20.3807 10.2724C20.8941 9.76814 21.3013 9.16942 21.5791 8.51045C21.857 7.85148 22 7.14517 22 6.43187C22 5.71857 21.857 5.01225 21.5791 4.35328C21.3013 3.69431 20.8941 3.09559 20.3807 2.59133Z\"\n                        fill=\"currentColor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                    />\n                </svg>\n            </button>\n            <div className={`${styles.img_wrp}`}>\n                <img className={`${styles.img}`} src={image} alt={title} />\n            </div>\n            <div className={`${styles.card_body}`}>\n                <div className={`${styles.card_characteristics}`}>\n                    <div className={`${styles.ranking}`}>\n                        <svg\n                            className={`${styles.ranking_star}`}\n                            viewBox=\"0 0 1024 1024\"\n                            height=\"1em\"\n                            width=\"1em\"\n                        >\n                            <path d=\"M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 00.6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0046.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3z\" />\n                        </svg>\n                        <div>{ranking}</div>\n                    </div>\n                    <div className={`${styles.episodes}`}>{episodes} episodes</div>\n                </div>\n                <h2 className={`${styles.title}`}>{title}</h2>\n            </div>\n            <button type=\"button\" className={`${styles.btn} btn btn-primary`}>\n                View more\n            </button>\n        </article>\n    );\n}\n\nexport {Card};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CardList_wrapper__wb2Tq\"};","import {Card} from '../Card/Card';\nimport {AnimeData} from '../../types/state';\n\nimport styles from './CardList.module.css';\n\ntype CardListProps = {\n    cards: AnimeData[];\n    // eslint-disable-next-line react/require-default-props, @typescript-eslint/no-explicit-any\n    setFavoritesAnime?: any;\n};\n\nfunction CardList({cards = [], setFavoritesAnime}: CardListProps) {\n    const amendedCards = cards?.map((item) => {\n        const {_id, ...rest} = item;\n        return {id: _id, ...rest};\n    });\n\n    const cardList = amendedCards?.map((item) => (\n        <li key={item.id}>\n            <Card\n                _id={item.id}\n                title={item.title}\n                image={item.image}\n                ranking={item.ranking}\n                episodes={item.episodes}\n                setFavoritesAnime={setFavoritesAnime}\n            />\n        </li>\n    ));\n\n    return <ul className={`${styles.wrapper}`}>{cardList}</ul>;\n}\n\nexport {CardList};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"EntryText_title__0WqHK\",\"txt\":\"EntryText_txt__65qZu\",\"txt_search\":\"EntryText_txt_search__RZJUS\"};","import styles from './EntryText.module.css';\n\nfunction EntryText() {\n    return (\n        <div>\n            <h1 className={`${styles.title}`}>\n                Welcome to <span style={{color: 'white'}}>Euphoric Serenety!</span>\n            </h1>\n            <h4>Database of top Anime</h4>\n            <p className={`${styles.txt}`}>\n                Are you a fan of Anime? Look no further! Our Anime Catalogue is your go-to\n                destination for exploring a wide range of captivating and popular anime titles.\n                Immerse yourself in a world of vibrant characters, stunning visuals, and captivating\n                storylines that will leave you spellbound.\n            </p>\n            <p className={`${styles.txt_search}`}>\n                Start searching your favourite anime by keywords or genres\n            </p>\n        </div>\n    );\n}\n\nexport {EntryText};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SearchInput_wrapper__WmzYr\",\"input\":\"SearchInput_input__pvo3q\"};","import React, {useState} from 'react';\nimport {debounce} from 'lodash';\nimport {AnimeData} from '../../types/state';\nimport styles from './SearchInput.module.css';\n\ntype SearchInputProps = {\n    searchResults: AnimeData[] | null;\n    setResults: React.Dispatch<React.SetStateAction<AnimeData[] | null>>;\n};\n\nfunction SearchInput({searchResults, setResults}: SearchInputProps) {\n    const [input, setInput] = useState<string>('');\n\n    const fetchData = (value: string) => {\n        const results = searchResults?.filter(\n            (anime: AnimeData) =>\n                value && anime && anime.title && anime.title.toLowerCase().includes(value)\n        );\n        setResults(results || null);\n    };\n\n    const debouncedFetchData = debounce(fetchData, 300);\n\n    const handleChange = (value: string) => {\n        setInput(value);\n        debouncedFetchData(value);\n    };\n\n    const handleSearch = () => {\n        window.location.href = '/anime-list/search';\n    };\n\n    return (\n        <div className={`${styles.wrapper}`}>\n            <input\n                type=\"text\"\n                value={input}\n                className={`${styles.input}`}\n                onChange={(e) => handleChange(e.target.value)}\n                list=\"suggestions\"\n                placeholder=\"Search...\"\n            />\n            <button type=\"submit\" className=\"btn btn-secondary my-2 my-sm-0\" onClick={handleSearch}>\n                Search\n            </button>\n        </div>\n    );\n}\n\nexport {SearchInput};\n","import {AnimeData} from '../../types/state';\n\ntype SearchResultsListProps = {\n    listedResults: AnimeData[] | null;\n};\n\nfunction SearchResultsList({listedResults}: SearchResultsListProps) {\n    const updatedList = listedResults?.map((item) => {\n        const {_id, ...rest} = item;\n        return {id: _id, ...rest};\n    });\n    return (\n        <div className=\"search-results-list__wrp dropdown-menu show\" style={{marginTop: '10px'}}>\n            {updatedList?.slice(0, 5).map((result) => (\n                <a\n                    href={`/anime-list/detailed-item/${result.id}`}\n                    className=\"dropdown-item\"\n                    key={result.id}\n                >\n                    {result.title}\n                </a>\n            ))}\n        </div>\n    );\n}\n\nexport {SearchResultsList};\n","import {useState} from 'react';\nimport {SearchInput} from '../SearchInput/SearchInput';\nimport {SearchResultsList} from '../SearchResultsList/SearchResultsList';\nimport {AnimeData} from '../../types/state';\n\ntype SearchProps = {\n    data: AnimeData[] | null;\n};\n\nfunction SearchBar({data}: SearchProps) {\n    const [results, setResults] = useState<AnimeData[] | null>(null);\n    return (\n        <div>\n            <SearchInput searchResults={data} setResults={setResults} />\n            <SearchResultsList listedResults={results} />\n        </div>\n    );\n}\n\nexport {SearchBar};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Main_container__92uv-\",\"card_container\":\"Main_card_container__7Zzog\"};","import {CardList} from '../../components/CardList/CardList';\nimport {EntryText} from '../../components/EntryText/EntryText';\nimport {SearchBar} from '../../components/SearchBar/SearchBar';\nimport {useDataFetching} from '../../hooks';\nimport styles from './Main.module.css';\n\nfunction Main() {\n    const animeDataBase = useDataFetching(\n        'https://anime-db.p.rapidapi.com/anime?page=1&size=15&search=Fullmetal&genres=Fantasy%2CDrama&sortBy=ranking&sortOrder=asc',\n        {\n            method: 'GET',\n            headers: {\n                'X-RapidAPI-Key': process.env.REACT_APP_EHB_ACCESS_KEY,\n                'X-RapidAPI-Host': 'anime-db.p.rapidapi.com',\n            },\n        }\n    );\n\n    return (\n        <div className={`${styles.container}`}>\n            <EntryText />\n            <SearchBar data={animeDataBase} />\n            <div className={`${styles.card_container}`}>\n                {animeDataBase && <CardList cards={animeDataBase} />}\n            </div>\n        </div>\n    );\n}\n\nexport {Main};\n"],"names":["Card","_ref","id","_id","title","image","ranking","episodes","setFavoritesAnime","_useState","useState","localStorage","getItem","JSON","stringify","_useState2","_slicedToArray","isFavorite","setIsFavorite","_jsxs","className","concat","styles","card","children","_jsx","favoriteButton","favorite","type","onClick","idAnime","Object","values","map","item","parse","setItem","handleLikeClick","width","height","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","img_wrp","img","src","alt","card_body","card_characteristics","ranking_star","btn","CardList","_ref$cards","cards","amendedCards","rest","_objectWithoutProperties","_excluded","_objectSpread","cardList","wrapper","EntryText","style","color","txt","txt_search","SearchInput","searchResults","setResults","input","setInput","debouncedFetchData","debounce","value","results","filter","anime","toLowerCase","includes","onChange","e","target","list","placeholder","window","location","href","SearchResultsList","listedResults","updatedList","marginTop","slice","result","SearchBar","data","Main","animeDataBase","useDataFetching","method","headers","process","container","card_container"],"sourceRoot":""}