{"version":3,"file":"static/js/848.5b87d447.chunk.js","mappings":"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","sources":["utils/getSetlocalStorage.ts","components/FavoriteSvg/FavoriteSvg.tsx","webpack://anime-list/./src/components/StartSvg/StarSvg.module.css?d4cf","components/StartSvg/StarSvg.tsx","webpack://anime-list/./src/components/Card/Card.module.css?4f06","components/Card/Card.tsx","webpack://anime-list/./src/components/CardList/CardList.module.css?f86e","components/CardList/CardList.tsx","components/SearchResultsList/SearchResultsList.tsx","webpack://anime-list/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.tsx","webpack://anime-list/./src/pages/Search/Search.module.css?89fb","pages/Search/Search.tsx","services/applyFilter.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {AnimeWithId} from '../types/animeData';\n\n// Потому что localStorage.getItem возвращает string | null, а localStorage.setItem принимает только стринг\nexport const setFavoriteToLS = (key: string, userInfo: any, value: AnimeWithId[]) => {\n    localStorage.setItem(key, JSON.stringify({...JSON.parse(userInfo), favorite: value}));\n};\n\nexport const getUserInfoFromLS = (userName: string) => localStorage.getItem(`${userName}`);\n","function FavoriteSvg() {\n    return (\n        <svg\n            width=\"23\"\n            height=\"20\"\n            viewBox=\"0 0 23 20\"\n            fill=\"currentColor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n        >\n            <path\n                d=\"M20.3807 2.59133C19.8676 2.08683 19.2583 1.68663 18.5878 1.41358C17.9172 1.14054 17.1985 1 16.4727 1C15.7468 1 15.0281 1.14054 14.3576 1.41358C13.687 1.68663 13.0778 2.08683 12.5646 2.59133L11.4997 3.63785L10.4348 2.59133C9.39834 1.57276 7.99258 1.00053 6.52679 1.00053C5.06099 1.00053 3.65523 1.57276 2.61876 2.59133C1.58229 3.6099 1 4.99139 1 6.43187C1 7.87235 1.58229 9.25383 2.61876 10.2724L3.68367 11.3189L11.4997 19L19.3158 11.3189L20.3807 10.2724C20.8941 9.76814 21.3013 9.16942 21.5791 8.51045C21.857 7.85148 22 7.14517 22 6.43187C22 5.71857 21.857 5.01225 21.5791 4.35328C21.3013 3.69431 20.8941 3.09559 20.3807 2.59133Z\"\n                fill=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n        </svg>\n    );\n}\n\nexport {FavoriteSvg};\n","// extracted by mini-css-extract-plugin\nexport default {\"ranking_star\":\"StarSvg_ranking_star__l4Ye3\"};","import styles from './StarSvg.module.css';\n\nfunction StarSvg() {\n    return (\n        <svg className={styles.ranking_star} viewBox=\"0 0 1024 1024\" height=\"1em\" width=\"1em\">\n            <path d=\"M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 00.6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0046.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3z\" />\n        </svg>\n    );\n}\n\nexport {StarSvg};\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__-SwHU\",\"img_wrp\":\"Card_img_wrp__w6RzI\",\"img\":\"Card_img__8Ehvv\",\"card_body\":\"Card_card_body__xpDzb\",\"card_characteristics\":\"Card_card_characteristics__wNOHp\",\"ranking\":\"Card_ranking__dOgZk\",\"ranking_star\":\"Card_ranking_star__gD4Zt\",\"episodes\":\"Card_episodes__eyqo9\",\"title\":\"Card_title__A6GVy\",\"view_btn\":\"Card_view_btn__8AoZW\",\"favorite\":\"Card_favorite__mfXCn\",\"favoriteButton\":\"Card_favoriteButton__-ELin\"};","import {useEffect, useState} from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {AnimeWithId} from '../../types/animeData';\nimport {addFavorite, deleteFavorite} from '../../store/favorite/favorite';\nimport {getFavoriteSelector} from '../../store/favorite/selectors';\nimport {getAuthStatus, getUserName} from '../../store/auth/selectors';\nimport {getUserInfoFromLS, setFavoriteToLS} from '../../utils/getSetlocalStorage';\nimport {useAppDispatch, useAppSelector} from '../../hooks';\nimport {FavoriteSvg} from '../FavoriteSvg/FavoriteSvg';\nimport {StarSvg} from '../StartSvg/StarSvg';\n\nimport styles from './Card.module.css';\n\nfunction Card({id, title, image, ranking, episodes}: AnimeWithId) {\n    const navigate = useNavigate();\n    const dispatch = useAppDispatch();\n\n    const favorite = useAppSelector(getFavoriteSelector);\n    const authStatus = useAppSelector(getAuthStatus);\n    const userName: string = useAppSelector(getUserName);\n\n    const [isFavorite, setIsFavorite] = useState<boolean>(\n        !!favorite.find((item) => item.id === id)\n    );\n\n    const userInfo: string | null = getUserInfoFromLS(userName);\n\n    const handleLikeClick = (idAnime: number) => {\n        if (isFavorite) {\n            dispatch(deleteFavorite(idAnime));\n            setIsFavorite(false);\n            return;\n        }\n\n        dispatch(addFavorite({id, title, image, ranking, episodes}));\n        setIsFavorite(true);\n    };\n\n    const handleDelailedPageClick = (idAnime: number) => {\n        navigate(`detailed-item/${idAnime}`);\n    };\n\n    useEffect(() => {\n        if (authStatus) {\n            setFavoriteToLS(userName, userInfo, favorite);\n        }\n    }, [favorite, userInfo, userName, isFavorite, authStatus]);\n\n    return (\n        <article className={`${styles.card} card border-primary`}>\n            {authStatus ? (\n                <button\n                    className={`${styles.favoriteButton} ${isFavorite ? styles.favorite : ''}`}\n                    type=\"button\"\n                    onClick={() => handleLikeClick(id)}\n                >\n                    <FavoriteSvg />\n                </button>\n            ) : null}\n            <div className={`${styles.img_wrp}`}>\n                <img className={`${styles.img}`} src={image} alt={title} />\n            </div>\n            <div className={styles.card_body}>\n                <div className={styles.card_characteristics}>\n                    <div className={styles.ranking}>\n                        <StarSvg />\n                        <div>{ranking}</div>\n                    </div>\n                    <div className={styles.episodes}>{episodes} episodes</div>\n                </div>\n                <h2 className={styles.title}>{title}</h2>\n            </div>\n            <button\n                type=\"button\"\n                className={`${styles.view_btn} btn btn-primary`}\n                onClick={() => handleDelailedPageClick(id)}\n            >\n                View more\n            </button>\n        </article>\n    );\n}\n\nCard.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    ranking: PropTypes.number.isRequired,\n    episodes: PropTypes.number.isRequired,\n};\n\nexport {Card};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CardList_wrapper__wb2Tq\"};","import PropTypes from 'prop-types';\nimport {Card} from '../Card/Card';\n\nimport {AnimeWithId} from '../../types/animeData';\nimport styles from './CardList.module.css';\n\ntype CardListProps = {\n    cards: AnimeWithId[] | null;\n};\n\nfunction CardList({cards}: CardListProps) {\n    const cardList = cards?.map((item) => (\n        <li key={item.id}>\n            <Card\n                id={item.id}\n                title={item.title}\n                image={item.image}\n                ranking={item.ranking}\n                episodes={item.episodes}\n            />\n        </li>\n    ));\n\n    return <ul className={styles.wrapper}>{cardList}</ul>;\n}\n\nCardList.defaultProps = {\n    cards: null,\n};\n\nCardList.propTypes = {\n    cards: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            ranking: PropTypes.number.isRequired,\n            episodes: PropTypes.number.isRequired,\n        })\n    ),\n};\n\nexport {CardList};\n","import cn from 'classnames';\nimport {AnimeWithId} from '../../types/animeData';\n\ntype SearchResultsListProps = {\n    input: string;\n    results: AnimeWithId[] | null;\n    maxResults: number;\n};\n\nfunction SearchResultsList({input, results, maxResults}: SearchResultsListProps) {\n    const filteredResults = results?.slice(0, maxResults);\n    return (\n        <div\n            className={cn('search-results-list__wrp', 'dropdown-menu', {\n                show: !!input,\n            })}\n            style={{marginTop: '10px'}}\n        >\n            {filteredResults?.map((result) => (\n                <a\n                    href={`/anime-list/detailed-item/${result.id}`}\n                    className=\"dropdown-item\"\n                    key={result.id}\n                >\n                    {result.title}\n                </a>\n            ))}\n        </div>\n    );\n}\n\nexport {SearchResultsList};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SearchBar_wrapper__KGK67\",\"input\":\"SearchBar_input__bIy50\"};","import React, {useState} from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport {debounce} from 'lodash';\nimport PropTypes from 'prop-types';\nimport {applyFilter} from '../../services/applyFilter';\nimport {SearchResultsList} from '../SearchResultsList/SearchResultsList';\n\nimport {AnimeWithId} from '../../types/animeData';\nimport styles from './SearchBar.module.css';\n\ntype SearchProps = {\n    data: AnimeWithId[] | null;\n};\n\nfunction SearchBar({data}: SearchProps) {\n    const [input, setInput] = useState<string>('');\n    const [suggests, setSuggests] = useState<AnimeWithId[] | null>(null);\n\n    const navigate = useNavigate();\n\n    const debouncedGenerateSuggests = debounce((userInput: string) => {\n        const filteredAnime = applyFilter(userInput, data);\n        setSuggests(filteredAnime);\n    }, 300);\n\n    const handleChange = ({target: {value}}: React.ChangeEvent<HTMLInputElement>) => {\n        setInput(value);\n        debouncedGenerateSuggests(value);\n    };\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        setSuggests(null);\n\n        const query = (event.target as HTMLFormElement).search.value;\n        navigate(`/anime-list/search/?query=${query}`);\n    };\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit} className={styles.wrapper}>\n                <input\n                    type=\"search\"\n                    value={input}\n                    className={styles.input}\n                    placeholder=\"Search...\"\n                    name=\"search\"\n                    autoComplete=\"off\"\n                    onChange={handleChange}\n                />\n                <button type=\"submit\" className=\"btn btn-secondary my-2 my-sm-0\">\n                    Search\n                </button>\n            </form>\n            {input && <SearchResultsList input={input} results={suggests} maxResults={5} />}\n        </div>\n    );\n}\n\nSearchBar.defaultProps = {\n    data: null,\n};\n\nSearchBar.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            _id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            ranking: PropTypes.number.isRequired,\n            episodes: PropTypes.number.isRequired,\n            setFavoritesAnime: PropTypes.func.isRequired,\n        })\n    ),\n};\n\nexport {SearchBar};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Search_container__xaI+z\",\"title\":\"Search_title__ZPO6U\"};","import {useLocation} from 'react-router-dom';\nimport {CardList} from '../../components/CardList/CardList';\nimport {SearchBar} from '../../components/SearchBar/SearchBar';\nimport {applyFilter} from '../../services/applyFilter';\n\nimport {useGetCardsQuery} from '../../api/cardsApi';\nimport styles from './Search.module.css';\n\nfunction Search() {\n    const {data} = useGetCardsQuery('');\n    let filteredAnimes = null;\n\n    const location = useLocation();\n    const userQuery = new URLSearchParams(location.search).get('query');\n\n    if (data) {\n        filteredAnimes = applyFilter(userQuery, data);\n    }\n    const isDataLoading = !data;\n\n    let message;\n    if (isDataLoading) {\n        message = 'Loading...';\n    } else if (userQuery === null || userQuery.length === 0 || filteredAnimes?.length === 0) {\n        message = 'No matching Anime...';\n    } else {\n        message = 'Search Results:';\n    }\n\n    return (\n        <div className={styles.container}>\n            <SearchBar data={data} />\n            <h4 className={styles.title}>{message}</h4>\n            <CardList cards={filteredAnimes} />\n        </div>\n    );\n}\n\nexport {Search};\n","import {AnimeWithId} from '../types/animeData';\n\nexport const applyFilter = (\n    userInput: string | null,\n    data: AnimeWithId[] | null\n): AnimeWithId[] | null => {\n    if (!userInput || !data) {\n        return null;\n    }\n\n    return data.filter((anime) => anime.title.toLowerCase().includes(userInput.toLowerCase()));\n};\n"],"names":["setFavoriteToLS","key","userInfo","value","localStorage","setItem","JSON","stringify","_objectSpread","parse","favorite","getUserInfoFromLS","userName","getItem","concat","FavoriteSvg","_jsx","width","height","viewBox","fill","xmlns","children","d","strokeLinecap","strokeLinejoin","StarSvg","className","styles","ranking_star","Card","_ref","id","title","image","ranking","episodes","navigate","useNavigate","dispatch","useAppDispatch","useAppSelector","getFavoriteSelector","authStatus","getAuthStatus","getUserName","_useState","useState","find","item","_useState2","_slicedToArray","isFavorite","setIsFavorite","useEffect","_jsxs","card","favoriteButton","type","onClick","idAnime","deleteFavorite","addFavorite","handleLikeClick","img_wrp","img","src","alt","card_body","card_characteristics","view_btn","CardList","cards","cardList","map","wrapper","defaultProps","SearchResultsList","input","results","maxResults","filteredResults","slice","cn","show","style","marginTop","result","href","SearchBar","data","setInput","_useState3","_useState4","suggests","setSuggests","debouncedGenerateSuggests","debounce","userInput","filteredAnime","applyFilter","onSubmit","event","preventDefault","query","target","search","placeholder","name","autoComplete","onChange","_ref2","Search","_filteredAnimes","message","useGetCardsQuery","filteredAnimes","location","useLocation","userQuery","URLSearchParams","get","length","container","filter","anime","toLowerCase","includes"],"sourceRoot":""}