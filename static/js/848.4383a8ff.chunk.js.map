{"version":3,"file":"static/js/848.4383a8ff.chunk.js","mappings":"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","sources":["webpack://anime-list/./src/components/Card/Card.module.css?4f06","components/Card/Card.tsx","webpack://anime-list/./src/components/CardList/CardList.module.css?f86e","components/CardList/CardList.tsx","components/SearchResultsList/SearchResultsList.tsx","webpack://anime-list/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.tsx","hooks/useDataFetching.ts","webpack://anime-list/./src/pages/Search/Search.module.css?89fb","pages/Search/Search.tsx","services/applyFilter.tsx","services/renameIdsInData.ts","store/favorite/selectors.ts","utils/localStorage.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__-SwHU\",\"img_wrp\":\"Card_img_wrp__w6RzI\",\"img\":\"Card_img__8Ehvv\",\"card_body\":\"Card_card_body__xpDzb\",\"card_characteristics\":\"Card_card_characteristics__wNOHp\",\"ranking\":\"Card_ranking__dOgZk\",\"ranking_star\":\"Card_ranking_star__gD4Zt\",\"episodes\":\"Card_episodes__eyqo9\",\"title\":\"Card_title__A6GVy\",\"view_btn\":\"Card_view_btn__8AoZW\",\"favorite\":\"Card_favorite__mfXCn\",\"favoriteButton\":\"Card_favoriteButton__-ELin\"};","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-unused-vars */\nimport {useEffect, useState} from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {AnimeData} from '../../types/state';\nimport {addFavorite, deleteFavorite} from '../../store/favorite/favorite';\nimport {getFavoriteSelector} from '../../store/favorite/selectors';\nimport {getAuthStatus, getUserName} from '../../store/auth/selectors';\nimport {getUserInfoFromLS, setFavoriteToLS} from '../../utils/localStorage';\nimport {useAppDispatch, useAppSelector} from '../../hooks';\n\nimport styles from './Card.module.css';\n\nfunction Card({id, title, image, ranking, episodes}: AnimeData) {\n    const navigate = useNavigate();\n    const dispatch = useAppDispatch();\n\n    const favorite = useAppSelector(getFavoriteSelector);\n    const authStatus = useAppSelector(getAuthStatus);\n    const userName: string = useAppSelector(getUserName);\n\n    const [isFavorite, setIsFavorite] = useState<boolean>(\n        !!favorite.find((item) => item.id === id)\n    );\n\n    const userInfo: any = getUserInfoFromLS(userName);\n\n    const handleLikeClick = (idAnime: number) => {\n        if (isFavorite) {\n            dispatch(deleteFavorite(idAnime));\n            setIsFavorite(false);\n            return;\n        }\n\n        dispatch(addFavorite({id, title, image, ranking, episodes}));\n        setIsFavorite(true);\n    };\n\n    const handleDelailedPageClick = (idAnime: number) => {\n        navigate(`detailed-item/${idAnime}`);\n    };\n\n    useEffect(() => {\n        if (authStatus) {\n            setFavoriteToLS(userName, userInfo, favorite);\n        }\n    }, [favorite, userInfo, userName, isFavorite, authStatus]);\n\n    return (\n        <article className={`${styles.card} card border-primary`}>\n            {authStatus ? (\n                <button\n                    className={`${styles.favoriteButton} ${isFavorite ? styles.favorite : ''}`}\n                    type=\"button\"\n                    onClick={() => handleLikeClick(id)}\n                >\n                    <svg\n                        width=\"23\"\n                        height=\"20\"\n                        viewBox=\"0 0 23 20\"\n                        fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            d=\"M20.3807 2.59133C19.8676 2.08683 19.2583 1.68663 18.5878 1.41358C17.9172 1.14054 17.1985 1 16.4727 1C15.7468 1 15.0281 1.14054 14.3576 1.41358C13.687 1.68663 13.0778 2.08683 12.5646 2.59133L11.4997 3.63785L10.4348 2.59133C9.39834 1.57276 7.99258 1.00053 6.52679 1.00053C5.06099 1.00053 3.65523 1.57276 2.61876 2.59133C1.58229 3.6099 1 4.99139 1 6.43187C1 7.87235 1.58229 9.25383 2.61876 10.2724L3.68367 11.3189L11.4997 19L19.3158 11.3189L20.3807 10.2724C20.8941 9.76814 21.3013 9.16942 21.5791 8.51045C21.857 7.85148 22 7.14517 22 6.43187C22 5.71857 21.857 5.01225 21.5791 4.35328C21.3013 3.69431 20.8941 3.09559 20.3807 2.59133Z\"\n                            fill=\"currentColor\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                    </svg>\n                </button>\n            ) : null}\n            <div className={`${styles.img_wrp}`}>\n                <img className={`${styles.img}`} src={image} alt={title} />\n            </div>\n            <div className={styles.card_body}>\n                <div className={styles.card_characteristics}>\n                    <div className={styles.ranking}>\n                        <svg\n                            className={styles.ranking_star}\n                            viewBox=\"0 0 1024 1024\"\n                            height=\"1em\"\n                            width=\"1em\"\n                        >\n                            <path d=\"M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 00.6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0046.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3z\" />\n                        </svg>\n                        <div>{ranking}</div>\n                    </div>\n                    <div className={styles.episodes}>{episodes} episodes</div>\n                </div>\n                <h2 className={styles.title}>{title}</h2>\n            </div>\n            <button\n                type=\"button\"\n                className={`${styles.view_btn} btn btn-primary`}\n                onClick={() => handleDelailedPageClick(id)}\n            >\n                View more\n            </button>\n        </article>\n    );\n}\n\nCard.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    ranking: PropTypes.number.isRequired,\n    episodes: PropTypes.number.isRequired,\n};\n\nexport {Card};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CardList_wrapper__wb2Tq\"};","import PropTypes from 'prop-types';\nimport {Card} from '../Card/Card';\nimport {AnimeWithId} from '../../types/state';\n\nimport styles from './CardList.module.css';\n\ntype CardListProps = {\n    cards: AnimeWithId[] | null;\n};\n\nfunction CardList({cards}: CardListProps) {\n    const cardList = cards?.map((item) => (\n        <li key={item.id}>\n            <Card\n                id={item.id}\n                title={item.title}\n                image={item.image}\n                ranking={item.ranking}\n                episodes={item.episodes}\n            />\n        </li>\n    ));\n\n    return <ul className={styles.wrapper}>{cardList}</ul>;\n}\n\nCardList.defaultProps = {\n    cards: null,\n};\n\nCardList.propTypes = {\n    cards: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            ranking: PropTypes.number.isRequired,\n            episodes: PropTypes.number.isRequired,\n        })\n    ),\n};\n\nexport {CardList};\n","import cn from 'classnames';\nimport {AnimeWithId} from '../../types/state';\n\ntype SearchResultsListProps = {\n    input: string;\n    results: AnimeWithId[] | null;\n    maxResults: number;\n};\n\nfunction SearchResultsList({input, results, maxResults}: SearchResultsListProps) {\n    const filteredResults = results?.slice(0, maxResults);\n    return (\n        <div\n            className={cn('search-results-list__wrp', 'dropdown-menu', {\n                show: !!input,\n            })}\n            style={{marginTop: '10px'}}\n        >\n            {filteredResults?.map((result) => (\n                <a\n                    href={`/anime-list/detailed-item/${result.id}`}\n                    className=\"dropdown-item\"\n                    key={result.id}\n                >\n                    {result.title}\n                </a>\n            ))}\n        </div>\n    );\n}\n\nexport {SearchResultsList};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SearchBar_wrapper__KGK67\",\"input\":\"SearchBar_input__bIy50\"};","import React, {useState} from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport {debounce} from 'lodash';\nimport PropTypes from 'prop-types';\nimport {applyFilter} from '../../services/applyFilter';\nimport {SearchResultsList} from '../SearchResultsList/SearchResultsList';\n\nimport {AnimeWithId} from '../../types/state';\nimport styles from './SearchBar.module.css';\n\ntype SearchProps = {\n    data: AnimeWithId[] | null;\n};\n\nfunction SearchBar({data}: SearchProps) {\n    const [input, setInput] = useState<string>('');\n    const [suggests, setSuggests] = useState<AnimeWithId[] | null>(null);\n\n    const navigate = useNavigate();\n\n    const debouncedGenerateSuggests = debounce((userInput: string) => {\n        const filteredAnime = applyFilter(userInput, data);\n        setSuggests(filteredAnime);\n    }, 300);\n\n    const handleChange = ({target: {value}}: React.ChangeEvent<HTMLInputElement>) => {\n        setInput(value);\n        debouncedGenerateSuggests(value);\n    };\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        setSuggests(null);\n\n        const query = (event.target as HTMLFormElement).search.value;\n        navigate(`/anime-list/search/?query=${query}`);\n    };\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit} className={styles.wrapper}>\n                <input\n                    type=\"search\"\n                    value={input}\n                    className={styles.input}\n                    placeholder=\"Search...\"\n                    name=\"search\"\n                    autoComplete=\"off\"\n                    onChange={handleChange}\n                />\n                <button type=\"submit\" className=\"btn btn-secondary my-2 my-sm-0\">\n                    Search\n                </button>\n            </form>\n            {input && <SearchResultsList input={input} results={suggests} maxResults={5} />}\n        </div>\n    );\n}\n\nSearchBar.defaultProps = {\n    data: null,\n};\n\nSearchBar.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            _id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            ranking: PropTypes.number.isRequired,\n            episodes: PropTypes.number.isRequired,\n            setFavoritesAnime: PropTypes.func.isRequired,\n        })\n    ),\n};\n\nexport {SearchBar};\n","import {useEffect, useState} from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst options: any = {\n    method: 'GET',\n    headers: {\n        'X-RapidAPI-Key': process.env.REACT_APP_EHB_ACCESS_KEY,\n        'X-RapidAPI-Host': 'anime-db.p.rapidapi.com',\n    },\n};\n\nconst useDataFetching = (url: string, pageName: string) => {\n    const [data, setData] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch(url, options);\n                const json = await response.json();\n                switch (pageName) {\n                    case 'main':\n                    case 'search':\n                        setData(json.data);\n                        break;\n                    case 'datailed-page':\n                        setData(json);\n                        break;\n                    default:\n                        break;\n                }\n            } catch (error) {\n                // eslint-disable-next-line no-console\n                console.log('error', error);\n            }\n        };\n        fetchData();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return data;\n};\n\nexport {useDataFetching};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Search_container__xaI+z\",\"title\":\"Search_title__ZPO6U\"};","import {useLocation} from 'react-router-dom';\nimport {CardList} from '../../components/CardList/CardList';\nimport {SearchBar} from '../../components/SearchBar/SearchBar';\nimport {applyFilter} from '../../services/applyFilter';\nimport {useDataFetching} from '../../hooks/useDataFetching';\nimport {renameIdsInData} from '../../services/renameIdsInData';\n\nimport styles from './Search.module.css';\n\nfunction Search() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const fetchedAnimes: any = useDataFetching(\n        'https://anime-db.p.rapidapi.com/anime?page=1&size=20&search=Fullmetal&genres=Fantasy%2CDrama&sortBy=ranking&sortOrder=asc',\n        'main'\n    );\n    const animeDataBase = renameIdsInData(fetchedAnimes);\n\n    const location = useLocation();\n    const userQuery = new URLSearchParams(location.search).get('query');\n\n    const filteredAnimes = applyFilter(userQuery, animeDataBase);\n    const isDataLoading = !animeDataBase;\n\n    let message;\n    if (isDataLoading) {\n        message = 'Loading...';\n    } else if (userQuery === null || userQuery.length === 0 || filteredAnimes?.length === 0) {\n        message = 'No matching Anime...';\n    } else {\n        message = 'Search Results:';\n    }\n\n    return (\n        <div className={styles.container}>\n            <SearchBar data={animeDataBase} />\n            <h4 className={styles.title}>{message}</h4>\n            <CardList cards={filteredAnimes} />\n        </div>\n    );\n}\n\nexport {Search};\n","import {AnimeWithId} from '../types/state';\n\n// Filters an array of objects of AnimeInfo type, returning an array of objects only with those titles that include user's query in input\n\nexport const applyFilter = (userInput: string | null, data: AnimeWithId[] | null) => {\n    if (!userInput || !data) {\n        return null;\n    }\n\n    return data.filter((anime) => anime.title.toLowerCase().includes(userInput.toLowerCase()));\n};\n","import {AnimeWithId} from '../types/state';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst renameIdsInData = (data: any[]): AnimeWithId[] =>\n    data?.map((item) => {\n        const {_id, ...rest} = item;\n        return {...rest, id: _id} as AnimeWithId;\n    });\n\nexport {renameIdsInData};\n","import {State} from '../../types/state';\nimport {NameSpace} from '../NameSpace';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const getFavoriteSelector = (state: State): any[] => state[NameSpace.Favorite].favorite;\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const setFavoriteToLS = (key: string, userInfo: any, value: any) => {\n    localStorage.setItem(key, JSON.stringify({...JSON.parse(userInfo), favorite: value}));\n};\n\nexport const getUserInfoFromLS = (userName: string | undefined) =>\n    localStorage.getItem(`${userName}`);\n"],"names":["Card","_ref","id","title","image","ranking","episodes","navigate","useNavigate","dispatch","useAppDispatch","favorite","useAppSelector","getFavoriteSelector","authStatus","getAuthStatus","userName","getUserName","_useState","useState","find","item","_useState2","_slicedToArray","isFavorite","setIsFavorite","userInfo","getUserInfoFromLS","useEffect","setFavoriteToLS","_jsxs","className","concat","styles","card","children","_jsx","favoriteButton","type","onClick","idAnime","deleteFavorite","addFavorite","handleLikeClick","width","height","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","img_wrp","img","src","alt","card_body","card_characteristics","ranking_star","view_btn","CardList","cards","cardList","map","wrapper","defaultProps","SearchResultsList","input","results","maxResults","filteredResults","slice","cn","show","style","marginTop","result","href","SearchBar","data","setInput","_useState3","_useState4","suggests","setSuggests","debouncedGenerateSuggests","debounce","userInput","filteredAnime","applyFilter","onSubmit","event","preventDefault","query","target","search","value","placeholder","name","autoComplete","onChange","_ref2","options","method","headers","process","useDataFetching","url","pageName","setData","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","json","wrap","_context","prev","next","fetch","sent","t0","abrupt","t1","console","log","stop","apply","arguments","Search","message","fetchedAnimes","animeDataBase","renameIdsInData","location","useLocation","userQuery","URLSearchParams","get","filteredAnimes","length","container","filter","anime","toLowerCase","includes","_id","rest","_objectWithoutProperties","_excluded","_objectSpread","state","NameSpace","Favorite","key","localStorage","setItem","JSON","stringify","parse","getItem"],"sourceRoot":""}